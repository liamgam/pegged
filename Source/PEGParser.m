//
//  Generated by preggers 0.3.4.
//

#import "PEGParser.h"

#import "Compiler.h"

@interface PEGParser ()

- (BOOL) _matchDot;
- (BOOL) _matchString:(char *)s;
- (BOOL) _matchClass:(unsigned char *)bits;
- (BOOL) matchAND;
- (BOOL) matchAction;
- (BOOL) matchBEGIN;
- (BOOL) matchCLOSE;
- (BOOL) matchChar;
- (BOOL) matchClass;
- (BOOL) matchCode;
- (BOOL) matchComment;
- (BOOL) matchDOT;
- (BOOL) matchDeclaration;
- (BOOL) matchDefinition;
- (BOOL) matchEND;
- (BOOL) matchEffect;
- (BOOL) matchEndOfDecl;
- (BOOL) matchEndOfFile;
- (BOOL) matchEndOfLine;
- (BOOL) matchExpression;
- (BOOL) matchGrammar;
- (BOOL) matchHorizSpace;
- (BOOL) matchIdentCont;
- (BOOL) matchIdentStart;
- (BOOL) matchIdentifier;
- (BOOL) matchLEFTARROW;
- (BOOL) matchLiteral;
- (BOOL) matchNOT;
- (BOOL) matchOPEN;
- (BOOL) matchOPTION;
- (BOOL) matchPLUS;
- (BOOL) matchPROPERTY;
- (BOOL) matchPrefix;
- (BOOL) matchPrimary;
- (BOOL) matchPropIdentifier;
- (BOOL) matchPropParamaters;
- (BOOL) matchQUESTION;
- (BOOL) matchRange;
- (BOOL) matchSLASH;
- (BOOL) matchSTAR;
- (BOOL) matchSequence;
- (BOOL) matchSpace;
- (BOOL) matchSpacing;
- (BOOL) matchSuffix;

@end


@implementation PEGParser

@synthesize dataSource = _dataSource;
@synthesize compiler = _compiler;

//==================================================================================================
#pragma mark -
#pragma mark Rules
//==================================================================================================


#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#ifdef matchDEBUG
#define yyprintf(args)	{ fprintf args; fprintf(stderr," @ %s\n",[[_string substringFromIndex:_index] UTF8String]); }
#else
#define yyprintf(args)
#endif

- (BOOL) _refill
{
    if (!self.dataSource)
        return NO;

    NSString *nextString = [self.dataSource nextString];
    if (nextString)
    {
        nextString = [_string stringByAppendingString:nextString];
        [_string release];
        _string = [nextString retain];
    }
    _limit = [_string lengthOfBytesUsingEncoding:NSUTF8StringEncoding];
    yyprintf((stderr, "refill"));
    return YES;
}

- (BOOL) _matchDot
{
    if (_index >= _limit && ![self _refill]) return NO;
    ++_index;
    return YES;
}

- (BOOL) _matchString:(char *)s
{
#ifndef PEGPARSER_CASE_INSENSITIVE
    const char *cstring = [_string UTF8String];
#else
    const char *cstring = [[_string lowercaseString] UTF8String];
#endif
    int saved = _index;
    while (*s)
    {
        if (_index >= _limit && ![self _refill]) return NO;
        if (cstring[_index] != *s)
        {
            _index = saved;
    yyprintf((stderr, "  fail _matchString"));
            return NO;
        }
        ++s;
        ++_index;
    }
    yyprintf((stderr, "  ok   _matchString"));
    return YES;
}

- (BOOL) _matchClass:(unsigned char *)bits
{
    if (_index >= _limit && ![self _refill]) return NO;
    int c = [_string characterAtIndex:_index];
    if (bits[c >> 3] & (1 << (c & 7)))
    {
        ++_index;
        yyprintf((stderr, "  ok   _matchClass"));
        return YES;
    }
    yyprintf((stderr, "  fail _matchClass"));
    return NO;
}

- (void) yyDo:(SEL)action
{
    while (yythunkpos >= yythunkslen)
    {
        yythunkslen *= 2;
        yythunks= realloc(yythunks, sizeof(yythunk) * yythunkslen);
    }
    yythunks[yythunkpos].begin=  yybegin;
    yythunks[yythunkpos].end=    yyend;
    yythunks[yythunkpos].action= action;
    ++yythunkpos;
}

- (void) yyText:(int)begin to:(int)end
{
    int len = end - begin;
    if (len <= 0)
    {
        [_text release];
        _text = nil;
    }
    else
    {
        _text = [_string substringWithRange:NSMakeRange(begin, end-begin)];
        [_text retain];
    }
}

- (void) yyDone
{
    int pos;
    for (pos= 0;  pos < yythunkpos;  ++pos)
    {
        yythunk *thunk= &yythunks[pos];
        [self yyText:thunk->begin to:thunk->end];
        yyprintf((stderr, "DO [%d] %s %s\n", pos, [NSStringFromSelector(thunk->action) UTF8String], [_text UTF8String]));
        [self performSelector:thunk->action withObject:_text];
    }
    yythunkpos= 0;
}

- (void) yyCommit
{
    NSString *newString = [_string substringFromIndex:_index];
    [_string release];
    _string = [newString retain];
    _limit -= _index;
    _index = 0;

    yybegin -= _index;
    yyend -= _index;
    yythunkpos= 0;
}

- (void) yy_1_Declaration:(NSString *)text
{
 self.compiler.caseInsensitive = YES; ;
}

- (void) yy_2_Declaration:(NSString *)text
{
 [self.compiler parsedPropertyParameters:text]; ;
}

- (void) yy_3_Declaration:(NSString *)text
{
 [self.compiler parsedPropertyType:text]; ;
}

- (void) yy_4_Declaration:(NSString *)text
{
 [self.compiler parsedPropertyStars:text]; ;
}

- (void) yy_5_Declaration:(NSString *)text
{
 [self.compiler parsedPropertyName:text]; ;
}

- (void) yy_1_Definition:(NSString *)text
{
 [self.compiler startRule:text]; ;
}

- (void) yy_2_Definition:(NSString *)text
{
 [self.compiler parsedRule]; ;
}

- (void) yy_1_Expression:(NSString *)text
{
 [self.compiler parsedAlternate]; ;
}

- (void) yy_1_Sequence:(NSString *)text
{
 [self.compiler append]; ;
}

- (void) yy_1_Prefix:(NSString *)text
{
 [self.compiler parsedLookAhead]; ;
}

- (void) yy_2_Prefix:(NSString *)text
{
 [self.compiler parsedNegativeLookAhead]; ;
}

- (void) yy_3_Prefix:(NSString *)text
{
 [self.compiler parsedLookAhead:text]; ;
}

- (void) yy_4_Prefix:(NSString *)text
{
 [self.compiler parsedNegativeLookAhead:text]; ;
}

- (void) yy_1_Suffix:(NSString *)text
{
 [self.compiler parsedQuestion]; ;
}

- (void) yy_2_Suffix:(NSString *)text
{
 [self.compiler parsedStar]; ;
}

- (void) yy_3_Suffix:(NSString *)text
{
 [self.compiler parsedPlus]; ;
}

- (void) yy_1_Primary:(NSString *)text
{
 [self.compiler parsedIdentifier:text]; ;
}

- (void) yy_2_Primary:(NSString *)text
{
 [self.compiler parsedLiteral:text]; ;
}

- (void) yy_3_Primary:(NSString *)text
{
 [self.compiler parsedClass:text]; ;
}

- (void) yy_4_Primary:(NSString *)text
{
 [self.compiler parsedDot]; ;
}

- (void) yy_1_Effect:(NSString *)text
{
 [self.compiler parsedCode:text]; ;
}

- (void) yy_2_Effect:(NSString *)text
{
 [self.compiler parsedAction:text]; ;
}

- (void) yy_3_Effect:(NSString *)text
{
 [self.compiler beginCapture]; ;
}

- (void) yy_4_Effect:(NSString *)text
{
 [self.compiler endCapture]; ;
}

- (BOOL) matchAND
{
    NSUInteger index0=_index, yythunkpos1=yythunkpos;
    yyprintf((stderr, "%s", "AND"));
    if (![self _matchString:"&"]) goto L2;
    if (![self matchSpacing]) goto L2;
    yyprintf((stderr, "  ok   %s", "AND"));
    return YES;
L2:;
    _index=index0; yythunkpos=yythunkpos1;
    yyprintf((stderr, "  fail %s", "AND"));
    return NO;
}

- (BOOL) matchAction
{
    NSUInteger index5=_index, yythunkpos6=yythunkpos;
    yyprintf((stderr, "%s", "Action"));
    if (![self _matchString:"{"]) goto L7;
    yybegin = _index;
    NSUInteger index10, yythunkpos11;
L12:;
    index10=_index; yythunkpos11=yythunkpos;
    if (![self _matchClass:(unsigned char *)"\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\337\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"]) goto L13;
    goto L12;
L13:;
    _index=index10; yythunkpos=yythunkpos11;
    yyend = _index;
    if (![self _matchString:"}"]) goto L7;
    if (![self matchSpacing]) goto L7;
    yyprintf((stderr, "  ok   %s", "Action"));
    return YES;
L7:;
    _index=index5; yythunkpos=yythunkpos6;
    yyprintf((stderr, "  fail %s", "Action"));
    return NO;
}

- (BOOL) matchBEGIN
{
    NSUInteger index14=_index, yythunkpos15=yythunkpos;
    yyprintf((stderr, "%s", "BEGIN"));
    if (![self _matchString:"<"]) goto L16;
    if (![self matchSpacing]) goto L16;
    yyprintf((stderr, "  ok   %s", "BEGIN"));
    return YES;
L16:;
    _index=index14; yythunkpos=yythunkpos15;
    yyprintf((stderr, "  fail %s", "BEGIN"));
    return NO;
}

- (BOOL) matchCLOSE
{
    NSUInteger index19=_index, yythunkpos20=yythunkpos;
    yyprintf((stderr, "%s", "CLOSE"));
    if (![self _matchString:")"]) goto L21;
    if (![self matchSpacing]) goto L21;
    yyprintf((stderr, "  ok   %s", "CLOSE"));
    return YES;
L21:;
    _index=index19; yythunkpos=yythunkpos20;
    yyprintf((stderr, "  fail %s", "CLOSE"));
    return NO;
}

- (BOOL) matchChar
{
    NSUInteger index24=_index, yythunkpos25=yythunkpos;
    yyprintf((stderr, "%s", "Char"));
    NSUInteger index27=_index, yythunkpos28=yythunkpos;
    if (![self _matchString:"\\"]) goto L30;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\204\000\000\000\000\000\000\070\000\100\024\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L30;
    goto L29;
L30:;
    _index=index27; yythunkpos=yythunkpos28;
    if (![self _matchString:"\\"]) goto L33;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L33;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\377\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L33;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\377\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L33;
    goto L29;
L33:;
    _index=index27; yythunkpos=yythunkpos28;
    if (![self _matchString:"\\"]) goto L36;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\377\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L36;
    NSUInteger index39=_index, yythunkpos40=yythunkpos;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\377\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L41;
    goto L42;
L41:;
    _index=index39; yythunkpos=yythunkpos40;
L42:;
    goto L29;
L36:;
    _index=index27; yythunkpos=yythunkpos28;
    if (![self _matchString:"\\x"]) goto L43;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\377\003\176\000\000\000\176\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L43;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\377\003\176\000\000\000\176\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L43;
    goto L29;
L43:;
    _index=index27; yythunkpos=yythunkpos28;
    NSUInteger index48=_index, yythunkpos49=yythunkpos;
    if ([self _matchString:"\\"]) goto L26;
    _index=index48; yythunkpos=yythunkpos49;
    if (![self _matchDot]) goto L26;
    goto L29;
L29:;
    yyprintf((stderr, "  ok   %s", "Char"));
    return YES;
L26:;
    _index=index24; yythunkpos=yythunkpos25;
    yyprintf((stderr, "  fail %s", "Char"));
    return NO;
}

- (BOOL) matchClass
{
    NSUInteger index50=_index, yythunkpos51=yythunkpos;
    yyprintf((stderr, "%s", "Class"));
    if (![self _matchString:"["]) goto L52;
    yybegin = _index;
    NSUInteger index55, yythunkpos56;
L57:;
    index55=_index; yythunkpos56=yythunkpos;
    NSUInteger index61=_index, yythunkpos62=yythunkpos;
    if ([self _matchString:"]"]) goto L58;
    _index=index61; yythunkpos=yythunkpos62;
    if (![self matchRange]) goto L58;
    goto L57;
L58:;
    _index=index55; yythunkpos=yythunkpos56;
    yyend = _index;
    if (![self _matchString:"]"]) goto L52;
    if (![self matchSpacing]) goto L52;
    yyprintf((stderr, "  ok   %s", "Class"));
    return YES;
L52:;
    _index=index50; yythunkpos=yythunkpos51;
    yyprintf((stderr, "  fail %s", "Class"));
    return NO;
}

- (BOOL) matchCode
{
    NSUInteger index63=_index, yythunkpos64=yythunkpos;
    yyprintf((stderr, "%s", "Code"));
    if (![self _matchString:"{{"]) goto L65;
    yybegin = _index;
    NSUInteger index68, yythunkpos69;
L70:;
    index68=_index; yythunkpos69=yythunkpos;
    if (![self _matchClass:(unsigned char *)"\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\337\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"]) goto L71;
    goto L70;
L71:;
    _index=index68; yythunkpos=yythunkpos69;
    yyend = _index;
    if (![self _matchString:"}}"]) goto L65;
    if (![self matchSpacing]) goto L65;
    yyprintf((stderr, "  ok   %s", "Code"));
    return YES;
L65:;
    _index=index63; yythunkpos=yythunkpos64;
    yyprintf((stderr, "  fail %s", "Code"));
    return NO;
}

- (BOOL) matchComment
{
    NSUInteger index72=_index, yythunkpos73=yythunkpos;
    yyprintf((stderr, "%s", "Comment"));
    if (![self _matchString:"#"]) goto L74;
    NSUInteger index77, yythunkpos78;
L79:;
    index77=_index; yythunkpos78=yythunkpos;
    NSUInteger index83=_index, yythunkpos84=yythunkpos;
    if ([self matchEndOfLine]) goto L80;
    _index=index83; yythunkpos=yythunkpos84;
    if (![self _matchDot]) goto L80;
    goto L79;
L80:;
    _index=index77; yythunkpos=yythunkpos78;
    if (![self matchEndOfLine]) goto L74;
    yyprintf((stderr, "  ok   %s", "Comment"));
    return YES;
L74:;
    _index=index72; yythunkpos=yythunkpos73;
    yyprintf((stderr, "  fail %s", "Comment"));
    return NO;
}

- (BOOL) matchDOT
{
    NSUInteger index85=_index, yythunkpos86=yythunkpos;
    yyprintf((stderr, "%s", "DOT"));
    if (![self _matchString:"."]) goto L87;
    if (![self matchSpacing]) goto L87;
    yyprintf((stderr, "  ok   %s", "DOT"));
    return YES;
L87:;
    _index=index85; yythunkpos=yythunkpos86;
    yyprintf((stderr, "  fail %s", "DOT"));
    return NO;
}

- (BOOL) matchDeclaration
{
    NSUInteger index90=_index, yythunkpos91=yythunkpos;
    yyprintf((stderr, "%s", "Declaration"));
    NSUInteger index93=_index, yythunkpos94=yythunkpos;
    if (![self matchOPTION]) goto L96;
    if (![self _matchString:"case-insensitive"]) goto L96;
    NSUInteger index99, yythunkpos100;
L101:;
    index99=_index; yythunkpos100=yythunkpos;
    if (![self matchHorizSpace]) goto L102;
    goto L101;
L102:;
    _index=index99; yythunkpos=yythunkpos100;
    if (![self matchEndOfDecl]) goto L96;
    [self yyDo:@selector(yy_1_Declaration:)];
    goto L95;
L96:;
    _index=index93; yythunkpos=yythunkpos94;
    if (![self matchPROPERTY]) goto L92;
    NSUInteger index105=_index, yythunkpos106=yythunkpos;
    if (![self matchPropParamaters]) goto L107;
    [self yyDo:@selector(yy_2_Declaration:)];
    goto L108;
L107:;
    _index=index105; yythunkpos=yythunkpos106;
L108:;
    if (![self matchPropIdentifier]) goto L92;
    [self yyDo:@selector(yy_3_Declaration:)];
    yybegin = _index;
    NSUInteger index111, yythunkpos112;
L113:;
    index111=_index; yythunkpos112=yythunkpos;
    if (![self _matchString:"*"]) goto L114;
    goto L113;
L114:;
    _index=index111; yythunkpos=yythunkpos112;
    yyend = _index;
    NSUInteger index115, yythunkpos116;
L117:;
    index115=_index; yythunkpos116=yythunkpos;
    if (![self matchHorizSpace]) goto L118;
    goto L117;
L118:;
    _index=index115; yythunkpos=yythunkpos116;
    [self yyDo:@selector(yy_4_Declaration:)];
    if (![self matchPropIdentifier]) goto L92;
    if (![self matchEndOfDecl]) goto L92;
    [self yyDo:@selector(yy_5_Declaration:)];
    goto L95;
L95:;
    yyprintf((stderr, "  ok   %s", "Declaration"));
    return YES;
L92:;
    _index=index90; yythunkpos=yythunkpos91;
    yyprintf((stderr, "  fail %s", "Declaration"));
    return NO;
}

- (BOOL) matchDefinition
{
    NSUInteger index119=_index, yythunkpos120=yythunkpos;
    yyprintf((stderr, "%s", "Definition"));
    if (![self matchIdentifier]) goto L121;
    [self yyDo:@selector(yy_1_Definition:)];
    if (![self matchLEFTARROW]) goto L121;
    if (![self matchExpression]) goto L121;
    [self yyDo:@selector(yy_2_Definition:)];
    yyprintf((stderr, "  ok   %s", "Definition"));
    return YES;
L121:;
    _index=index119; yythunkpos=yythunkpos120;
    yyprintf((stderr, "  fail %s", "Definition"));
    return NO;
}

- (BOOL) matchEND
{
    NSUInteger index124=_index, yythunkpos125=yythunkpos;
    yyprintf((stderr, "%s", "END"));
    if (![self _matchString:">"]) goto L126;
    if (![self matchSpacing]) goto L126;
    yyprintf((stderr, "  ok   %s", "END"));
    return YES;
L126:;
    _index=index124; yythunkpos=yythunkpos125;
    yyprintf((stderr, "  fail %s", "END"));
    return NO;
}

- (BOOL) matchEffect
{
    NSUInteger index129=_index, yythunkpos130=yythunkpos;
    yyprintf((stderr, "%s", "Effect"));
    NSUInteger index132=_index, yythunkpos133=yythunkpos;
    if (![self matchCode]) goto L135;
    [self yyDo:@selector(yy_1_Effect:)];
    goto L134;
L135:;
    _index=index132; yythunkpos=yythunkpos133;
    if (![self matchAction]) goto L138;
    [self yyDo:@selector(yy_2_Effect:)];
    goto L134;
L138:;
    _index=index132; yythunkpos=yythunkpos133;
    if (![self matchBEGIN]) goto L141;
    [self yyDo:@selector(yy_3_Effect:)];
    goto L134;
L141:;
    _index=index132; yythunkpos=yythunkpos133;
    if (![self matchEND]) goto L131;
    [self yyDo:@selector(yy_4_Effect:)];
    goto L134;
L134:;
    yyprintf((stderr, "  ok   %s", "Effect"));
    return YES;
L131:;
    _index=index129; yythunkpos=yythunkpos130;
    yyprintf((stderr, "  fail %s", "Effect"));
    return NO;
}

- (BOOL) matchEndOfDecl
{
    NSUInteger index146=_index, yythunkpos147=yythunkpos;
    yyprintf((stderr, "%s", "EndOfDecl"));
    if (![self _matchString:";"]) goto L148;
    NSUInteger index151, yythunkpos152;
L153:;
    index151=_index; yythunkpos152=yythunkpos;
    if (![self matchHorizSpace]) goto L154;
    goto L153;
L154:;
    _index=index151; yythunkpos=yythunkpos152;
    NSUInteger index155=_index, yythunkpos156=yythunkpos;
    if (![self matchEndOfLine]) goto L158;
    goto L157;
L158:;
    _index=index155; yythunkpos=yythunkpos156;
    if (![self matchComment]) goto L148;
    goto L157;
L157:;
    yyprintf((stderr, "  ok   %s", "EndOfDecl"));
    return YES;
L148:;
    _index=index146; yythunkpos=yythunkpos147;
    yyprintf((stderr, "  fail %s", "EndOfDecl"));
    return NO;
}

- (BOOL) matchEndOfFile
{
    NSUInteger index159=_index, yythunkpos160=yythunkpos;
    yyprintf((stderr, "%s", "EndOfFile"));
    NSUInteger index162=_index, yythunkpos163=yythunkpos;
    if ([self _matchDot]) goto L161;
    _index=index162; yythunkpos=yythunkpos163;
    yyprintf((stderr, "  ok   %s", "EndOfFile"));
    return YES;
L161:;
    _index=index159; yythunkpos=yythunkpos160;
    yyprintf((stderr, "  fail %s", "EndOfFile"));
    return NO;
}

- (BOOL) matchEndOfLine
{
    NSUInteger index164=_index, yythunkpos165=yythunkpos;
    yyprintf((stderr, "%s", "EndOfLine"));
    NSUInteger index167=_index, yythunkpos168=yythunkpos;
    if (![self _matchString:"\r\n"]) goto L170;
    goto L169;
L170:;
    _index=index167; yythunkpos=yythunkpos168;
    if (![self _matchString:"\n"]) goto L171;
    goto L169;
L171:;
    _index=index167; yythunkpos=yythunkpos168;
    if (![self _matchString:"\r"]) goto L166;
    goto L169;
L169:;
    yyprintf((stderr, "  ok   %s", "EndOfLine"));
    return YES;
L166:;
    _index=index164; yythunkpos=yythunkpos165;
    yyprintf((stderr, "  fail %s", "EndOfLine"));
    return NO;
}

- (BOOL) matchExpression
{
    NSUInteger index172=_index, yythunkpos173=yythunkpos;
    yyprintf((stderr, "%s", "Expression"));
    if (![self matchSequence]) goto L174;
    NSUInteger index177, yythunkpos178;
L179:;
    index177=_index; yythunkpos178=yythunkpos;
    if (![self matchSLASH]) goto L180;
    if (![self matchSequence]) goto L180;
    [self yyDo:@selector(yy_1_Expression:)];
    goto L179;
L180:;
    _index=index177; yythunkpos=yythunkpos178;
    yyprintf((stderr, "  ok   %s", "Expression"));
    return YES;
L174:;
    _index=index172; yythunkpos=yythunkpos173;
    yyprintf((stderr, "  fail %s", "Expression"));
    return NO;
}

- (BOOL) matchGrammar
{
    NSUInteger index183=_index, yythunkpos184=yythunkpos;
    yyprintf((stderr, "%s", "Grammar"));
    if (![self matchSpacing]) goto L185;
    NSUInteger index188, yythunkpos189;
L190:;
    index188=_index; yythunkpos189=yythunkpos;
    if (![self matchDeclaration]) goto L191;
    goto L190;
L191:;
    _index=index188; yythunkpos=yythunkpos189;
    if (![self matchSpacing]) goto L185;
    if (![self matchDefinition]) goto L185;
    NSUInteger index192, yythunkpos193;
L194:;
    index192=_index; yythunkpos193=yythunkpos;
    if (![self matchDefinition]) goto L195;
    goto L194;
L195:;
    _index=index192; yythunkpos=yythunkpos193;
    if (![self matchEndOfFile]) goto L185;
    yyprintf((stderr, "  ok   %s", "Grammar"));
    return YES;
L185:;
    _index=index183; yythunkpos=yythunkpos184;
    yyprintf((stderr, "  fail %s", "Grammar"));
    return NO;
}

- (BOOL) matchHorizSpace
{
    NSUInteger index196=_index, yythunkpos197=yythunkpos;
    yyprintf((stderr, "%s", "HorizSpace"));
    NSUInteger index199=_index, yythunkpos200=yythunkpos;
    if (![self _matchString:" "]) goto L202;
    goto L201;
L202:;
    _index=index199; yythunkpos=yythunkpos200;
    if (![self _matchString:"\t"]) goto L198;
    goto L201;
L201:;
    yyprintf((stderr, "  ok   %s", "HorizSpace"));
    return YES;
L198:;
    _index=index196; yythunkpos=yythunkpos197;
    yyprintf((stderr, "  fail %s", "HorizSpace"));
    return NO;
}

- (BOOL) matchIdentCont
{
    NSUInteger index203=_index, yythunkpos204=yythunkpos;
    yyprintf((stderr, "%s", "IdentCont"));
    NSUInteger index206=_index, yythunkpos207=yythunkpos;
    if (![self matchIdentStart]) goto L209;
    goto L208;
L209:;
    _index=index206; yythunkpos=yythunkpos207;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\377\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L205;
    goto L208;
L208:;
    yyprintf((stderr, "  ok   %s", "IdentCont"));
    return YES;
L205:;
    _index=index203; yythunkpos=yythunkpos204;
    yyprintf((stderr, "  fail %s", "IdentCont"));
    return NO;
}

- (BOOL) matchIdentStart
{
    NSUInteger index210=_index, yythunkpos211=yythunkpos;
    yyprintf((stderr, "%s", "IdentStart"));
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\000\000\376\377\377\207\376\377\377\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L212;
    yyprintf((stderr, "  ok   %s", "IdentStart"));
    return YES;
L212:;
    _index=index210; yythunkpos=yythunkpos211;
    yyprintf((stderr, "  fail %s", "IdentStart"));
    return NO;
}

- (BOOL) matchIdentifier
{
    NSUInteger index213=_index, yythunkpos214=yythunkpos;
    yyprintf((stderr, "%s", "Identifier"));
    yybegin = _index;
    if (![self matchIdentStart]) goto L215;
    NSUInteger index218, yythunkpos219;
L220:;
    index218=_index; yythunkpos219=yythunkpos;
    if (![self matchIdentCont]) goto L221;
    goto L220;
L221:;
    _index=index218; yythunkpos=yythunkpos219;
    yyend = _index;
    if (![self matchSpacing]) goto L215;
    yyprintf((stderr, "  ok   %s", "Identifier"));
    return YES;
L215:;
    _index=index213; yythunkpos=yythunkpos214;
    yyprintf((stderr, "  fail %s", "Identifier"));
    return NO;
}

- (BOOL) matchLEFTARROW
{
    NSUInteger index222=_index, yythunkpos223=yythunkpos;
    yyprintf((stderr, "%s", "LEFTARROW"));
    if (![self _matchString:"<-"]) goto L224;
    if (![self matchSpacing]) goto L224;
    yyprintf((stderr, "  ok   %s", "LEFTARROW"));
    return YES;
L224:;
    _index=index222; yythunkpos=yythunkpos223;
    yyprintf((stderr, "  fail %s", "LEFTARROW"));
    return NO;
}

- (BOOL) matchLiteral
{
    NSUInteger index227=_index, yythunkpos228=yythunkpos;
    yyprintf((stderr, "%s", "Literal"));
    NSUInteger index230=_index, yythunkpos231=yythunkpos;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L233;
    yybegin = _index;
    NSUInteger index236, yythunkpos237;
L238:;
    index236=_index; yythunkpos237=yythunkpos;
    NSUInteger index242=_index, yythunkpos243=yythunkpos;
    if ([self _matchClass:(unsigned char *)"\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L239;
    _index=index242; yythunkpos=yythunkpos243;
    if (![self matchChar]) goto L239;
    goto L238;
L239:;
    _index=index236; yythunkpos=yythunkpos237;
    yyend = _index;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L233;
    if (![self matchSpacing]) goto L233;
    goto L232;
L233:;
    _index=index230; yythunkpos=yythunkpos231;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L229;
    yybegin = _index;
    NSUInteger index246, yythunkpos247;
L248:;
    index246=_index; yythunkpos247=yythunkpos;
    NSUInteger index252=_index, yythunkpos253=yythunkpos;
    if ([self _matchClass:(unsigned char *)"\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L249;
    _index=index252; yythunkpos=yythunkpos253;
    if (![self matchChar]) goto L249;
    goto L248;
L249:;
    _index=index246; yythunkpos=yythunkpos247;
    yyend = _index;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L229;
    if (![self matchSpacing]) goto L229;
    goto L232;
L232:;
    yyprintf((stderr, "  ok   %s", "Literal"));
    return YES;
L229:;
    _index=index227; yythunkpos=yythunkpos228;
    yyprintf((stderr, "  fail %s", "Literal"));
    return NO;
}

- (BOOL) matchNOT
{
    NSUInteger index254=_index, yythunkpos255=yythunkpos;
    yyprintf((stderr, "%s", "NOT"));
    if (![self _matchString:"!"]) goto L256;
    if (![self matchSpacing]) goto L256;
    yyprintf((stderr, "  ok   %s", "NOT"));
    return YES;
L256:;
    _index=index254; yythunkpos=yythunkpos255;
    yyprintf((stderr, "  fail %s", "NOT"));
    return NO;
}

- (BOOL) matchOPEN
{
    NSUInteger index259=_index, yythunkpos260=yythunkpos;
    yyprintf((stderr, "%s", "OPEN"));
    if (![self _matchString:"("]) goto L261;
    if (![self matchSpacing]) goto L261;
    yyprintf((stderr, "  ok   %s", "OPEN"));
    return YES;
L261:;
    _index=index259; yythunkpos=yythunkpos260;
    yyprintf((stderr, "  fail %s", "OPEN"));
    return NO;
}

- (BOOL) matchOPTION
{
    NSUInteger index264=_index, yythunkpos265=yythunkpos;
    yyprintf((stderr, "%s", "OPTION"));
    if (![self _matchString:"@option"]) goto L266;
    if (![self matchHorizSpace]) goto L266;
    NSUInteger index269, yythunkpos270;
L271:;
    index269=_index; yythunkpos270=yythunkpos;
    if (![self matchHorizSpace]) goto L272;
    goto L271;
L272:;
    _index=index269; yythunkpos=yythunkpos270;
    yyprintf((stderr, "  ok   %s", "OPTION"));
    return YES;
L266:;
    _index=index264; yythunkpos=yythunkpos265;
    yyprintf((stderr, "  fail %s", "OPTION"));
    return NO;
}

- (BOOL) matchPLUS
{
    NSUInteger index273=_index, yythunkpos274=yythunkpos;
    yyprintf((stderr, "%s", "PLUS"));
    if (![self _matchString:"+"]) goto L275;
    if (![self matchSpacing]) goto L275;
    yyprintf((stderr, "  ok   %s", "PLUS"));
    return YES;
L275:;
    _index=index273; yythunkpos=yythunkpos274;
    yyprintf((stderr, "  fail %s", "PLUS"));
    return NO;
}

- (BOOL) matchPROPERTY
{
    NSUInteger index278=_index, yythunkpos279=yythunkpos;
    yyprintf((stderr, "%s", "PROPERTY"));
    if (![self _matchString:"@property"]) goto L280;
    if (![self matchHorizSpace]) goto L280;
    NSUInteger index283, yythunkpos284;
L285:;
    index283=_index; yythunkpos284=yythunkpos;
    if (![self matchHorizSpace]) goto L286;
    goto L285;
L286:;
    _index=index283; yythunkpos=yythunkpos284;
    yyprintf((stderr, "  ok   %s", "PROPERTY"));
    return YES;
L280:;
    _index=index278; yythunkpos=yythunkpos279;
    yyprintf((stderr, "  fail %s", "PROPERTY"));
    return NO;
}

- (BOOL) matchPrefix
{
    NSUInteger index287=_index, yythunkpos288=yythunkpos;
    yyprintf((stderr, "%s", "Prefix"));
    NSUInteger index290=_index, yythunkpos291=yythunkpos;
    if (![self matchAND]) goto L293;
    if (![self matchSuffix]) goto L293;
    [self yyDo:@selector(yy_1_Prefix:)];
    goto L292;
L293:;
    _index=index290; yythunkpos=yythunkpos291;
    if (![self matchNOT]) goto L296;
    if (![self matchSuffix]) goto L296;
    [self yyDo:@selector(yy_2_Prefix:)];
    goto L292;
L296:;
    _index=index290; yythunkpos=yythunkpos291;
    if (![self matchAND]) goto L299;
    if (![self matchAction]) goto L299;
    [self yyDo:@selector(yy_3_Prefix:)];
    goto L292;
L299:;
    _index=index290; yythunkpos=yythunkpos291;
    if (![self matchNOT]) goto L302;
    if (![self matchAction]) goto L302;
    [self yyDo:@selector(yy_4_Prefix:)];
    goto L292;
L302:;
    _index=index290; yythunkpos=yythunkpos291;
    if (![self matchSuffix]) goto L305;
    goto L292;
L305:;
    _index=index290; yythunkpos=yythunkpos291;
    if (![self matchEffect]) goto L289;
    goto L292;
L292:;
    yyprintf((stderr, "  ok   %s", "Prefix"));
    return YES;
L289:;
    _index=index287; yythunkpos=yythunkpos288;
    yyprintf((stderr, "  fail %s", "Prefix"));
    return NO;
}

- (BOOL) matchPrimary
{
    NSUInteger index306=_index, yythunkpos307=yythunkpos;
    yyprintf((stderr, "%s", "Primary"));
    NSUInteger index309=_index, yythunkpos310=yythunkpos;
    if (![self matchIdentifier]) goto L312;
    NSUInteger index315=_index, yythunkpos316=yythunkpos;
    if ([self matchLEFTARROW]) goto L312;
    _index=index315; yythunkpos=yythunkpos316;
    [self yyDo:@selector(yy_1_Primary:)];
    goto L311;
L312:;
    _index=index309; yythunkpos=yythunkpos310;
    if (![self matchOPEN]) goto L317;
    if (![self matchExpression]) goto L317;
    if (![self matchCLOSE]) goto L317;
    goto L311;
L317:;
    _index=index309; yythunkpos=yythunkpos310;
    if (![self matchLiteral]) goto L320;
    [self yyDo:@selector(yy_2_Primary:)];
    goto L311;
L320:;
    _index=index309; yythunkpos=yythunkpos310;
    if (![self matchClass]) goto L323;
    [self yyDo:@selector(yy_3_Primary:)];
    goto L311;
L323:;
    _index=index309; yythunkpos=yythunkpos310;
    if (![self matchDOT]) goto L308;
    [self yyDo:@selector(yy_4_Primary:)];
    goto L311;
L311:;
    yyprintf((stderr, "  ok   %s", "Primary"));
    return YES;
L308:;
    _index=index306; yythunkpos=yythunkpos307;
    yyprintf((stderr, "  fail %s", "Primary"));
    return NO;
}

- (BOOL) matchPropIdentifier
{
    NSUInteger index328=_index, yythunkpos329=yythunkpos;
    yyprintf((stderr, "%s", "PropIdentifier"));
    yybegin = _index;
    if (![self matchIdentStart]) goto L330;
    NSUInteger index333, yythunkpos334;
L335:;
    index333=_index; yythunkpos334=yythunkpos;
    if (![self matchIdentCont]) goto L336;
    goto L335;
L336:;
    _index=index333; yythunkpos=yythunkpos334;
    yyend = _index;
    NSUInteger index337, yythunkpos338;
L339:;
    index337=_index; yythunkpos338=yythunkpos;
    if (![self matchHorizSpace]) goto L340;
    goto L339;
L340:;
    _index=index337; yythunkpos=yythunkpos338;
    yyprintf((stderr, "  ok   %s", "PropIdentifier"));
    return YES;
L330:;
    _index=index328; yythunkpos=yythunkpos329;
    yyprintf((stderr, "  fail %s", "PropIdentifier"));
    return NO;
}

- (BOOL) matchPropParamaters
{
    NSUInteger index341=_index, yythunkpos342=yythunkpos;
    yyprintf((stderr, "%s", "PropParamaters"));
    yybegin = _index;
    if (![self _matchString:"("]) goto L343;
    if (![self _matchClass:(unsigned char *)"\377\377\377\377\377\375\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"]) goto L343;
    NSUInteger index346, yythunkpos347;
L348:;
    index346=_index; yythunkpos347=yythunkpos;
    if (![self _matchClass:(unsigned char *)"\377\377\377\377\377\375\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"]) goto L349;
    goto L348;
L349:;
    _index=index346; yythunkpos=yythunkpos347;
    if (![self _matchString:")"]) goto L343;
    yyend = _index;
    if (![self matchHorizSpace]) goto L343;
    NSUInteger index350, yythunkpos351;
L352:;
    index350=_index; yythunkpos351=yythunkpos;
    if (![self matchHorizSpace]) goto L353;
    goto L352;
L353:;
    _index=index350; yythunkpos=yythunkpos351;
    yyprintf((stderr, "  ok   %s", "PropParamaters"));
    return YES;
L343:;
    _index=index341; yythunkpos=yythunkpos342;
    yyprintf((stderr, "  fail %s", "PropParamaters"));
    return NO;
}

- (BOOL) matchQUESTION
{
    NSUInteger index354=_index, yythunkpos355=yythunkpos;
    yyprintf((stderr, "%s", "QUESTION"));
    if (![self _matchString:"?"]) goto L356;
    if (![self matchSpacing]) goto L356;
    yyprintf((stderr, "  ok   %s", "QUESTION"));
    return YES;
L356:;
    _index=index354; yythunkpos=yythunkpos355;
    yyprintf((stderr, "  fail %s", "QUESTION"));
    return NO;
}

- (BOOL) matchRange
{
    NSUInteger index359=_index, yythunkpos360=yythunkpos;
    yyprintf((stderr, "%s", "Range"));
    NSUInteger index362=_index, yythunkpos363=yythunkpos;
    if (![self matchChar]) goto L365;
    if (![self _matchString:"-"]) goto L365;
    if (![self matchChar]) goto L365;
    goto L364;
L365:;
    _index=index362; yythunkpos=yythunkpos363;
    if (![self matchChar]) goto L361;
    goto L364;
L364:;
    yyprintf((stderr, "  ok   %s", "Range"));
    return YES;
L361:;
    _index=index359; yythunkpos=yythunkpos360;
    yyprintf((stderr, "  fail %s", "Range"));
    return NO;
}

- (BOOL) matchSLASH
{
    NSUInteger index368=_index, yythunkpos369=yythunkpos;
    yyprintf((stderr, "%s", "SLASH"));
    if (![self _matchString:"/"]) goto L370;
    if (![self matchSpacing]) goto L370;
    yyprintf((stderr, "  ok   %s", "SLASH"));
    return YES;
L370:;
    _index=index368; yythunkpos=yythunkpos369;
    yyprintf((stderr, "  fail %s", "SLASH"));
    return NO;
}

- (BOOL) matchSTAR
{
    NSUInteger index373=_index, yythunkpos374=yythunkpos;
    yyprintf((stderr, "%s", "STAR"));
    if (![self _matchString:"*"]) goto L375;
    if (![self matchSpacing]) goto L375;
    yyprintf((stderr, "  ok   %s", "STAR"));
    return YES;
L375:;
    _index=index373; yythunkpos=yythunkpos374;
    yyprintf((stderr, "  fail %s", "STAR"));
    return NO;
}

- (BOOL) matchSequence
{
    NSUInteger index378=_index, yythunkpos379=yythunkpos;
    yyprintf((stderr, "%s", "Sequence"));
    NSUInteger index383=_index, yythunkpos384=yythunkpos;
    if (![self matchPrefix]) goto L385;
    goto L386;
L385:;
    _index=index383; yythunkpos=yythunkpos384;
L386:;
    NSUInteger index387, yythunkpos388;
L389:;
    index387=_index; yythunkpos388=yythunkpos;
    if (![self matchPrefix]) goto L390;
    [self yyDo:@selector(yy_1_Sequence:)];
    goto L389;
L390:;
    _index=index387; yythunkpos=yythunkpos388;
    yyprintf((stderr, "  ok   %s", "Sequence"));
    return YES;
L380:;
    _index=index378; yythunkpos=yythunkpos379;
    yyprintf((stderr, "  fail %s", "Sequence"));
    return NO;
}

- (BOOL) matchSpace
{
    NSUInteger index393=_index, yythunkpos394=yythunkpos;
    yyprintf((stderr, "%s", "Space"));
    NSUInteger index396=_index, yythunkpos397=yythunkpos;
    if (![self _matchString:" "]) goto L399;
    goto L398;
L399:;
    _index=index396; yythunkpos=yythunkpos397;
    if (![self _matchString:"\t"]) goto L400;
    goto L398;
L400:;
    _index=index396; yythunkpos=yythunkpos397;
    if (![self matchEndOfLine]) goto L395;
    goto L398;
L398:;
    yyprintf((stderr, "  ok   %s", "Space"));
    return YES;
L395:;
    _index=index393; yythunkpos=yythunkpos394;
    yyprintf((stderr, "  fail %s", "Space"));
    return NO;
}

- (BOOL) matchSpacing
{
    NSUInteger index401=_index, yythunkpos402=yythunkpos;
    yyprintf((stderr, "%s", "Spacing"));
    NSUInteger index404, yythunkpos405;
L406:;
    index404=_index; yythunkpos405=yythunkpos;
    NSUInteger index408=_index, yythunkpos409=yythunkpos;
    if (![self matchSpace]) goto L411;
    goto L410;
L411:;
    _index=index408; yythunkpos=yythunkpos409;
    if (![self matchComment]) goto L407;
    goto L410;
L410:;
    goto L406;
L407:;
    _index=index404; yythunkpos=yythunkpos405;
    yyprintf((stderr, "  ok   %s", "Spacing"));
    return YES;
L403:;
    _index=index401; yythunkpos=yythunkpos402;
    yyprintf((stderr, "  fail %s", "Spacing"));
    return NO;
}

- (BOOL) matchSuffix
{
    NSUInteger index412=_index, yythunkpos413=yythunkpos;
    yyprintf((stderr, "%s", "Suffix"));
    if (![self matchPrimary]) goto L414;
    NSUInteger index417=_index, yythunkpos418=yythunkpos;
    NSUInteger index421=_index, yythunkpos422=yythunkpos;
    if (![self matchQUESTION]) goto L424;
    [self yyDo:@selector(yy_1_Suffix:)];
    goto L423;
L424:;
    _index=index421; yythunkpos=yythunkpos422;
    if (![self matchSTAR]) goto L427;
    [self yyDo:@selector(yy_2_Suffix:)];
    goto L423;
L427:;
    _index=index421; yythunkpos=yythunkpos422;
    if (![self matchPLUS]) goto L419;
    [self yyDo:@selector(yy_3_Suffix:)];
    goto L423;
L423:;
    goto L420;
L419:;
    _index=index417; yythunkpos=yythunkpos418;
L420:;
    yyprintf((stderr, "  ok   %s", "Suffix"));
    return YES;
L414:;
    _index=index412; yythunkpos=yythunkpos413;
    yyprintf((stderr, "  fail %s", "Suffix"));
    return NO;
}

- (BOOL) yyparsefrom:(SEL)startRule
{
    BOOL yyok;
    if (!yythunkslen)
    {
        yythunkslen= 32;
        yythunks= malloc(sizeof(yythunk) * yythunkslen);
        yybegin= yyend= yythunkpos= 0;
    }
    if (!_string)
    {
        _string = [NSString new];
        _limit = 0;
        _index = 0;
    }
    yybegin= yyend= _index;
    yythunkpos= 0;

    NSMethodSignature *sig = [[self class] instanceMethodSignatureForSelector:startRule];
    NSInvocation *invocation = [NSInvocation invocationWithMethodSignature:sig];
    [invocation setTarget:self];
    [invocation setSelector:startRule];
    [invocation invoke];
    [invocation getReturnValue:&yyok];
    if (yyok) [self yyDone];
    [self yyCommit];

    [_string release];
    _string = nil;
    [_text release];
    _text = nil;

    return yyok;
}

- (BOOL) yyparse
{
    return [self yyparsefrom:@selector(matchGrammar)];
}


//==================================================================================================
#pragma mark -
#pragma mark NSObject Methods
//==================================================================================================

- (void) dealloc
{
    free(yythunks);

    [_string release];

    [super dealloc];
}


//==================================================================================================
#pragma mark -
#pragma mark Public Methods
//==================================================================================================

- (BOOL) parse
{
    NSAssert(_dataSource != nil, @"can't call -parse without specifying a data source");
    return [self yyparse];
}


- (BOOL) parseString:(NSString *)string
{
    _string = [string copy];
    _limit  = [_string lengthOfBytesUsingEncoding:NSUTF8StringEncoding];
    _index  = 0;
    BOOL retval = [self yyparse];
    [_string release];
    _string = nil;
    return retval;
}


@end

