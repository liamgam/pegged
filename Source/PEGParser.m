//
//  Generated by preggers 0.3.2.
//

#import "PEGParser.h"

#import "Compiler.h"

@interface PEGParser ()

- (BOOL) _matchDot;
- (BOOL) _matchString:(char *)s;
- (BOOL) _matchClass:(unsigned char *)bits;
- (BOOL) matchAND;
- (BOOL) matchAction;
- (BOOL) matchBEGIN;
- (BOOL) matchCLOSE;
- (BOOL) matchChar;
- (BOOL) matchClass;
- (BOOL) matchComment;
- (BOOL) matchDOT;
- (BOOL) matchDeclaration;
- (BOOL) matchDefinition;
- (BOOL) matchEND;
- (BOOL) matchEffect;
- (BOOL) matchEndOfDecl;
- (BOOL) matchEndOfFile;
- (BOOL) matchEndOfLine;
- (BOOL) matchExpression;
- (BOOL) matchGrammar;
- (BOOL) matchHorizSpace;
- (BOOL) matchIdentCont;
- (BOOL) matchIdentStart;
- (BOOL) matchIdentifier;
- (BOOL) matchLEFTARROW;
- (BOOL) matchLiteral;
- (BOOL) matchNOT;
- (BOOL) matchOPEN;
- (BOOL) matchOPTION;
- (BOOL) matchPLUS;
- (BOOL) matchPROPERTY;
- (BOOL) matchPrefix;
- (BOOL) matchPrimary;
- (BOOL) matchPropIdentifier;
- (BOOL) matchPropParamaters;
- (BOOL) matchQUESTION;
- (BOOL) matchRange;
- (BOOL) matchSLASH;
- (BOOL) matchSTAR;
- (BOOL) matchSequence;
- (BOOL) matchSpace;
- (BOOL) matchSpacing;
- (BOOL) matchSuffix;

@end


@implementation PEGParser

@synthesize dataSource = _dataSource;
@synthesize compiler = _compiler;

//==================================================================================================
#pragma mark -
#pragma mark Rules
//==================================================================================================


#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#ifdef matchDEBUG
#define yyprintf(args)	{ fprintf args; fprintf(stderr," @ %s\n",[[_string substringFromIndex:_index] UTF8String]); }
#else
#define yyprintf(args)
#endif

- (BOOL) _refill
{
    if (!self.dataSource)
        return NO;

    NSString *nextString = [self.dataSource nextString];
    if (nextString)
    {
        nextString = [_string stringByAppendingString:nextString];
        [_string release];
        _string = [nextString retain];
    }
    _limit = [_string lengthOfBytesUsingEncoding:NSUTF8StringEncoding];
    yyprintf((stderr, "refill"));
    return YES;
}

- (BOOL) _matchDot
{
    if (_index >= _limit && ![self _refill]) return NO;
    ++_index;
    return YES;
}

- (BOOL) _matchString:(char *)s
{
#ifndef PEGPARSER_CASE_INSENSITIVE
    const char *cstring = [_string UTF8String];
#else
    const char *cstring = [[_string lowercaseString] UTF8String];
#endif
    int saved = _index;
    while (*s)
    {
        if (_index >= _limit && ![self _refill]) return NO;
        if (cstring[_index] != *s)
        {
            _index = saved;
    yyprintf((stderr, "  fail _matchString"));
            return NO;
        }
        ++s;
        ++_index;
    }
    yyprintf((stderr, "  ok   _matchString"));
    return YES;
}

- (BOOL) _matchClass:(unsigned char *)bits
{
    if (_index >= _limit && ![self _refill]) return NO;
    int c = [_string characterAtIndex:_index];
    if (bits[c >> 3] & (1 << (c & 7)))
    {
        ++_index;
        yyprintf((stderr, "  ok   _matchClass"));
        return YES;
    }
    yyprintf((stderr, "  fail _matchClass"));
    return NO;
}

- (void) yyDo:(SEL)action
{
    while (yythunkpos >= yythunkslen)
    {
        yythunkslen *= 2;
        yythunks= realloc(yythunks, sizeof(yythunk) * yythunkslen);
    }
    yythunks[yythunkpos].begin=  yybegin;
    yythunks[yythunkpos].end=    yyend;
    yythunks[yythunkpos].action= action;
    ++yythunkpos;
}

- (void) yyText:(int)begin to:(int)end
{
    int len = end - begin;
    if (len <= 0)
    {
        [_text release];
        _text = nil;
    }
    else
    {
        _text = [_string substringWithRange:NSMakeRange(begin, end-begin)];
        [_text retain];
    }
}

- (void) yyDone
{
    int pos;
    for (pos= 0;  pos < yythunkpos;  ++pos)
    {
        yythunk *thunk= &yythunks[pos];
        [self yyText:thunk->begin to:thunk->end];
        yyprintf((stderr, "DO [%d] %s %s\n", pos, [NSStringFromSelector(thunk->action) UTF8String], [_text UTF8String]));
        [self performSelector:thunk->action withObject:_text];
    }
    yythunkpos= 0;
}

- (void) yyCommit
{
    NSString *newString = [_string substringFromIndex:_index];
    [_string release];
    _string = [newString retain];
    _limit -= _index;
    _index = 0;

    yybegin -= _index;
    yyend -= _index;
    yythunkpos= 0;
}

- (void) yy_1_Declaration:(NSString *)text
{
 self.compiler.caseInsensitive = YES; ;
}

- (void) yy_2_Declaration:(NSString *)text
{
 [self.compiler parsedPropertyParameters:text]; ;
}

- (void) yy_3_Declaration:(NSString *)text
{
 [self.compiler parsedPropertyType:text]; ;
}

- (void) yy_4_Declaration:(NSString *)text
{
 [self.compiler parsedPropertyStars:text]; ;
}

- (void) yy_5_Declaration:(NSString *)text
{
 [self.compiler parsedPropertyName:text]; ;
}

- (void) yy_1_Definition:(NSString *)text
{
 [self.compiler startRule:text]; ;
}

- (void) yy_2_Definition:(NSString *)text
{
 [self.compiler parsedRule]; ;
}

- (void) yy_1_Expression:(NSString *)text
{
 [self.compiler parsedAlternate]; ;
}

- (void) yy_1_Sequence:(NSString *)text
{
 [self.compiler append]; ;
}

- (void) yy_1_Prefix:(NSString *)text
{
 [self.compiler parsedLookAhead]; ;
}

- (void) yy_2_Prefix:(NSString *)text
{
 [self.compiler parsedNegativeLookAhead]; ;
}

- (void) yy_3_Prefix:(NSString *)text
{
 [self.compiler parsedLookAhead:text]; ;
}

- (void) yy_4_Prefix:(NSString *)text
{
 [self.compiler parsedNegativeLookAhead:text]; ;
}

- (void) yy_1_Suffix:(NSString *)text
{
 [self.compiler parsedQuestion]; ;
}

- (void) yy_2_Suffix:(NSString *)text
{
 [self.compiler parsedStar]; ;
}

- (void) yy_3_Suffix:(NSString *)text
{
 [self.compiler parsedPlus]; ;
}

- (void) yy_1_Primary:(NSString *)text
{
 [self.compiler parsedIdentifier:text]; ;
}

- (void) yy_2_Primary:(NSString *)text
{
 [self.compiler parsedLiteral:text]; ;
}

- (void) yy_3_Primary:(NSString *)text
{
 [self.compiler parsedClass:text]; ;
}

- (void) yy_4_Primary:(NSString *)text
{
 [self.compiler parsedDot]; ;
}

- (void) yy_1_Effect:(NSString *)text
{
 [self.compiler parsedAction:text]; ;
}

- (void) yy_2_Effect:(NSString *)text
{
 [self.compiler beginCapture]; ;
}

- (void) yy_3_Effect:(NSString *)text
{
 [self.compiler endCapture]; ;
}

- (BOOL) matchAND
{
    NSUInteger index0=_index, yythunkpos1=yythunkpos;
    yyprintf((stderr, "%s", "AND"));
    if (![self _matchString:"&"]) goto L2;
    if (![self matchSpacing]) goto L2;
    yyprintf((stderr, "  ok   %s", "AND"));
    return YES;
L2:;
    _index=index0; yythunkpos=yythunkpos1;
    yyprintf((stderr, "  fail %s", "AND"));
    return NO;
}

- (BOOL) matchAction
{
    NSUInteger index5=_index, yythunkpos6=yythunkpos;
    yyprintf((stderr, "%s", "Action"));
    if (![self _matchString:"{"]) goto L7;
    yybegin = _index;
    NSUInteger index10, yythunkpos11;
L12:;
    index10=_index; yythunkpos11=yythunkpos;
    if (![self _matchClass:(unsigned char *)"\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\337\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"]) goto L13;
    goto L12;
L13:;
    _index=index10; yythunkpos=yythunkpos11;
    yyend = _index;
    if (![self _matchString:"}"]) goto L7;
    if (![self matchSpacing]) goto L7;
    yyprintf((stderr, "  ok   %s", "Action"));
    return YES;
L7:;
    _index=index5; yythunkpos=yythunkpos6;
    yyprintf((stderr, "  fail %s", "Action"));
    return NO;
}

- (BOOL) matchBEGIN
{
    NSUInteger index14=_index, yythunkpos15=yythunkpos;
    yyprintf((stderr, "%s", "BEGIN"));
    if (![self _matchString:"<"]) goto L16;
    if (![self matchSpacing]) goto L16;
    yyprintf((stderr, "  ok   %s", "BEGIN"));
    return YES;
L16:;
    _index=index14; yythunkpos=yythunkpos15;
    yyprintf((stderr, "  fail %s", "BEGIN"));
    return NO;
}

- (BOOL) matchCLOSE
{
    NSUInteger index19=_index, yythunkpos20=yythunkpos;
    yyprintf((stderr, "%s", "CLOSE"));
    if (![self _matchString:")"]) goto L21;
    if (![self matchSpacing]) goto L21;
    yyprintf((stderr, "  ok   %s", "CLOSE"));
    return YES;
L21:;
    _index=index19; yythunkpos=yythunkpos20;
    yyprintf((stderr, "  fail %s", "CLOSE"));
    return NO;
}

- (BOOL) matchChar
{
    NSUInteger index24=_index, yythunkpos25=yythunkpos;
    yyprintf((stderr, "%s", "Char"));
    NSUInteger index27=_index, yythunkpos28=yythunkpos;
    if (![self _matchString:"\\"]) goto L30;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\204\000\000\000\000\000\000\070\000\100\024\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L30;
    goto L29;
L30:;
    _index=index27; yythunkpos=yythunkpos28;
    if (![self _matchString:"\\"]) goto L33;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L33;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\377\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L33;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\377\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L33;
    goto L29;
L33:;
    _index=index27; yythunkpos=yythunkpos28;
    if (![self _matchString:"\\"]) goto L36;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\377\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L36;
    NSUInteger index39=_index, yythunkpos40=yythunkpos;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\377\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L41;
    goto L42;
L41:;
    _index=index39; yythunkpos=yythunkpos40;
L42:;
    goto L29;
L36:;
    _index=index27; yythunkpos=yythunkpos28;
    if (![self _matchString:"\\x"]) goto L43;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\377\003\176\000\000\000\176\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L43;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\377\003\176\000\000\000\176\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L43;
    goto L29;
L43:;
    _index=index27; yythunkpos=yythunkpos28;
    NSUInteger index48=_index, yythunkpos49=yythunkpos;
    if ([self _matchString:"\\"]) goto L26;
    _index=index48; yythunkpos=yythunkpos49;
    if (![self _matchDot]) goto L26;
    goto L29;
L29:;
    yyprintf((stderr, "  ok   %s", "Char"));
    return YES;
L26:;
    _index=index24; yythunkpos=yythunkpos25;
    yyprintf((stderr, "  fail %s", "Char"));
    return NO;
}

- (BOOL) matchClass
{
    NSUInteger index50=_index, yythunkpos51=yythunkpos;
    yyprintf((stderr, "%s", "Class"));
    if (![self _matchString:"["]) goto L52;
    yybegin = _index;
    NSUInteger index55, yythunkpos56;
L57:;
    index55=_index; yythunkpos56=yythunkpos;
    NSUInteger index61=_index, yythunkpos62=yythunkpos;
    if ([self _matchString:"]"]) goto L58;
    _index=index61; yythunkpos=yythunkpos62;
    if (![self matchRange]) goto L58;
    goto L57;
L58:;
    _index=index55; yythunkpos=yythunkpos56;
    yyend = _index;
    if (![self _matchString:"]"]) goto L52;
    if (![self matchSpacing]) goto L52;
    yyprintf((stderr, "  ok   %s", "Class"));
    return YES;
L52:;
    _index=index50; yythunkpos=yythunkpos51;
    yyprintf((stderr, "  fail %s", "Class"));
    return NO;
}

- (BOOL) matchComment
{
    NSUInteger index63=_index, yythunkpos64=yythunkpos;
    yyprintf((stderr, "%s", "Comment"));
    if (![self _matchString:"#"]) goto L65;
    NSUInteger index68, yythunkpos69;
L70:;
    index68=_index; yythunkpos69=yythunkpos;
    NSUInteger index74=_index, yythunkpos75=yythunkpos;
    if ([self matchEndOfLine]) goto L71;
    _index=index74; yythunkpos=yythunkpos75;
    if (![self _matchDot]) goto L71;
    goto L70;
L71:;
    _index=index68; yythunkpos=yythunkpos69;
    if (![self matchEndOfLine]) goto L65;
    yyprintf((stderr, "  ok   %s", "Comment"));
    return YES;
L65:;
    _index=index63; yythunkpos=yythunkpos64;
    yyprintf((stderr, "  fail %s", "Comment"));
    return NO;
}

- (BOOL) matchDOT
{
    NSUInteger index76=_index, yythunkpos77=yythunkpos;
    yyprintf((stderr, "%s", "DOT"));
    if (![self _matchString:"."]) goto L78;
    if (![self matchSpacing]) goto L78;
    yyprintf((stderr, "  ok   %s", "DOT"));
    return YES;
L78:;
    _index=index76; yythunkpos=yythunkpos77;
    yyprintf((stderr, "  fail %s", "DOT"));
    return NO;
}

- (BOOL) matchDeclaration
{
    NSUInteger index81=_index, yythunkpos82=yythunkpos;
    yyprintf((stderr, "%s", "Declaration"));
    NSUInteger index84=_index, yythunkpos85=yythunkpos;
    if (![self matchOPTION]) goto L87;
    if (![self _matchString:"case-insensitive"]) goto L87;
    NSUInteger index90, yythunkpos91;
L92:;
    index90=_index; yythunkpos91=yythunkpos;
    if (![self matchHorizSpace]) goto L93;
    goto L92;
L93:;
    _index=index90; yythunkpos=yythunkpos91;
    if (![self matchEndOfDecl]) goto L87;
    [self yyDo:@selector(yy_1_Declaration:)];
    goto L86;
L87:;
    _index=index84; yythunkpos=yythunkpos85;
    if (![self matchPROPERTY]) goto L83;
    NSUInteger index96=_index, yythunkpos97=yythunkpos;
    if (![self matchPropParamaters]) goto L98;
    [self yyDo:@selector(yy_2_Declaration:)];
    goto L99;
L98:;
    _index=index96; yythunkpos=yythunkpos97;
L99:;
    if (![self matchPropIdentifier]) goto L83;
    [self yyDo:@selector(yy_3_Declaration:)];
    yybegin = _index;
    NSUInteger index102, yythunkpos103;
L104:;
    index102=_index; yythunkpos103=yythunkpos;
    if (![self _matchString:"*"]) goto L105;
    goto L104;
L105:;
    _index=index102; yythunkpos=yythunkpos103;
    yyend = _index;
    NSUInteger index106, yythunkpos107;
L108:;
    index106=_index; yythunkpos107=yythunkpos;
    if (![self matchHorizSpace]) goto L109;
    goto L108;
L109:;
    _index=index106; yythunkpos=yythunkpos107;
    [self yyDo:@selector(yy_4_Declaration:)];
    if (![self matchPropIdentifier]) goto L83;
    if (![self matchEndOfDecl]) goto L83;
    [self yyDo:@selector(yy_5_Declaration:)];
    goto L86;
L86:;
    yyprintf((stderr, "  ok   %s", "Declaration"));
    return YES;
L83:;
    _index=index81; yythunkpos=yythunkpos82;
    yyprintf((stderr, "  fail %s", "Declaration"));
    return NO;
}

- (BOOL) matchDefinition
{
    NSUInteger index110=_index, yythunkpos111=yythunkpos;
    yyprintf((stderr, "%s", "Definition"));
    if (![self matchIdentifier]) goto L112;
    [self yyDo:@selector(yy_1_Definition:)];
    if (![self matchLEFTARROW]) goto L112;
    if (![self matchExpression]) goto L112;
    [self yyDo:@selector(yy_2_Definition:)];
    yyprintf((stderr, "  ok   %s", "Definition"));
    return YES;
L112:;
    _index=index110; yythunkpos=yythunkpos111;
    yyprintf((stderr, "  fail %s", "Definition"));
    return NO;
}

- (BOOL) matchEND
{
    NSUInteger index115=_index, yythunkpos116=yythunkpos;
    yyprintf((stderr, "%s", "END"));
    if (![self _matchString:">"]) goto L117;
    if (![self matchSpacing]) goto L117;
    yyprintf((stderr, "  ok   %s", "END"));
    return YES;
L117:;
    _index=index115; yythunkpos=yythunkpos116;
    yyprintf((stderr, "  fail %s", "END"));
    return NO;
}

- (BOOL) matchEffect
{
    NSUInteger index120=_index, yythunkpos121=yythunkpos;
    yyprintf((stderr, "%s", "Effect"));
    NSUInteger index123=_index, yythunkpos124=yythunkpos;
    if (![self matchAction]) goto L126;
    [self yyDo:@selector(yy_1_Effect:)];
    goto L125;
L126:;
    _index=index123; yythunkpos=yythunkpos124;
    if (![self matchBEGIN]) goto L129;
    [self yyDo:@selector(yy_2_Effect:)];
    goto L125;
L129:;
    _index=index123; yythunkpos=yythunkpos124;
    if (![self matchEND]) goto L122;
    [self yyDo:@selector(yy_3_Effect:)];
    goto L125;
L125:;
    yyprintf((stderr, "  ok   %s", "Effect"));
    return YES;
L122:;
    _index=index120; yythunkpos=yythunkpos121;
    yyprintf((stderr, "  fail %s", "Effect"));
    return NO;
}

- (BOOL) matchEndOfDecl
{
    NSUInteger index134=_index, yythunkpos135=yythunkpos;
    yyprintf((stderr, "%s", "EndOfDecl"));
    if (![self _matchString:";"]) goto L136;
    NSUInteger index139, yythunkpos140;
L141:;
    index139=_index; yythunkpos140=yythunkpos;
    if (![self matchHorizSpace]) goto L142;
    goto L141;
L142:;
    _index=index139; yythunkpos=yythunkpos140;
    NSUInteger index143=_index, yythunkpos144=yythunkpos;
    if (![self matchEndOfLine]) goto L146;
    goto L145;
L146:;
    _index=index143; yythunkpos=yythunkpos144;
    if (![self matchComment]) goto L136;
    goto L145;
L145:;
    yyprintf((stderr, "  ok   %s", "EndOfDecl"));
    return YES;
L136:;
    _index=index134; yythunkpos=yythunkpos135;
    yyprintf((stderr, "  fail %s", "EndOfDecl"));
    return NO;
}

- (BOOL) matchEndOfFile
{
    NSUInteger index147=_index, yythunkpos148=yythunkpos;
    yyprintf((stderr, "%s", "EndOfFile"));
    NSUInteger index150=_index, yythunkpos151=yythunkpos;
    if ([self _matchDot]) goto L149;
    _index=index150; yythunkpos=yythunkpos151;
    yyprintf((stderr, "  ok   %s", "EndOfFile"));
    return YES;
L149:;
    _index=index147; yythunkpos=yythunkpos148;
    yyprintf((stderr, "  fail %s", "EndOfFile"));
    return NO;
}

- (BOOL) matchEndOfLine
{
    NSUInteger index152=_index, yythunkpos153=yythunkpos;
    yyprintf((stderr, "%s", "EndOfLine"));
    NSUInteger index155=_index, yythunkpos156=yythunkpos;
    if (![self _matchString:"\r\n"]) goto L158;
    goto L157;
L158:;
    _index=index155; yythunkpos=yythunkpos156;
    if (![self _matchString:"\n"]) goto L159;
    goto L157;
L159:;
    _index=index155; yythunkpos=yythunkpos156;
    if (![self _matchString:"\r"]) goto L154;
    goto L157;
L157:;
    yyprintf((stderr, "  ok   %s", "EndOfLine"));
    return YES;
L154:;
    _index=index152; yythunkpos=yythunkpos153;
    yyprintf((stderr, "  fail %s", "EndOfLine"));
    return NO;
}

- (BOOL) matchExpression
{
    NSUInteger index160=_index, yythunkpos161=yythunkpos;
    yyprintf((stderr, "%s", "Expression"));
    if (![self matchSequence]) goto L162;
    NSUInteger index165, yythunkpos166;
L167:;
    index165=_index; yythunkpos166=yythunkpos;
    if (![self matchSLASH]) goto L168;
    if (![self matchSequence]) goto L168;
    [self yyDo:@selector(yy_1_Expression:)];
    goto L167;
L168:;
    _index=index165; yythunkpos=yythunkpos166;
    yyprintf((stderr, "  ok   %s", "Expression"));
    return YES;
L162:;
    _index=index160; yythunkpos=yythunkpos161;
    yyprintf((stderr, "  fail %s", "Expression"));
    return NO;
}

- (BOOL) matchGrammar
{
    NSUInteger index171=_index, yythunkpos172=yythunkpos;
    yyprintf((stderr, "%s", "Grammar"));
    if (![self matchSpacing]) goto L173;
    NSUInteger index176, yythunkpos177;
L178:;
    index176=_index; yythunkpos177=yythunkpos;
    if (![self matchDeclaration]) goto L179;
    goto L178;
L179:;
    _index=index176; yythunkpos=yythunkpos177;
    if (![self matchSpacing]) goto L173;
    if (![self matchDefinition]) goto L173;
    NSUInteger index180, yythunkpos181;
L182:;
    index180=_index; yythunkpos181=yythunkpos;
    if (![self matchDefinition]) goto L183;
    goto L182;
L183:;
    _index=index180; yythunkpos=yythunkpos181;
    if (![self matchEndOfFile]) goto L173;
    yyprintf((stderr, "  ok   %s", "Grammar"));
    return YES;
L173:;
    _index=index171; yythunkpos=yythunkpos172;
    yyprintf((stderr, "  fail %s", "Grammar"));
    return NO;
}

- (BOOL) matchHorizSpace
{
    NSUInteger index184=_index, yythunkpos185=yythunkpos;
    yyprintf((stderr, "%s", "HorizSpace"));
    NSUInteger index187=_index, yythunkpos188=yythunkpos;
    if (![self _matchString:" "]) goto L190;
    goto L189;
L190:;
    _index=index187; yythunkpos=yythunkpos188;
    if (![self _matchString:"\t"]) goto L186;
    goto L189;
L189:;
    yyprintf((stderr, "  ok   %s", "HorizSpace"));
    return YES;
L186:;
    _index=index184; yythunkpos=yythunkpos185;
    yyprintf((stderr, "  fail %s", "HorizSpace"));
    return NO;
}

- (BOOL) matchIdentCont
{
    NSUInteger index191=_index, yythunkpos192=yythunkpos;
    yyprintf((stderr, "%s", "IdentCont"));
    NSUInteger index194=_index, yythunkpos195=yythunkpos;
    if (![self matchIdentStart]) goto L197;
    goto L196;
L197:;
    _index=index194; yythunkpos=yythunkpos195;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\377\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L193;
    goto L196;
L196:;
    yyprintf((stderr, "  ok   %s", "IdentCont"));
    return YES;
L193:;
    _index=index191; yythunkpos=yythunkpos192;
    yyprintf((stderr, "  fail %s", "IdentCont"));
    return NO;
}

- (BOOL) matchIdentStart
{
    NSUInteger index198=_index, yythunkpos199=yythunkpos;
    yyprintf((stderr, "%s", "IdentStart"));
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\000\000\376\377\377\207\376\377\377\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L200;
    yyprintf((stderr, "  ok   %s", "IdentStart"));
    return YES;
L200:;
    _index=index198; yythunkpos=yythunkpos199;
    yyprintf((stderr, "  fail %s", "IdentStart"));
    return NO;
}

- (BOOL) matchIdentifier
{
    NSUInteger index201=_index, yythunkpos202=yythunkpos;
    yyprintf((stderr, "%s", "Identifier"));
    yybegin = _index;
    if (![self matchIdentStart]) goto L203;
    NSUInteger index206, yythunkpos207;
L208:;
    index206=_index; yythunkpos207=yythunkpos;
    if (![self matchIdentCont]) goto L209;
    goto L208;
L209:;
    _index=index206; yythunkpos=yythunkpos207;
    yyend = _index;
    if (![self matchSpacing]) goto L203;
    yyprintf((stderr, "  ok   %s", "Identifier"));
    return YES;
L203:;
    _index=index201; yythunkpos=yythunkpos202;
    yyprintf((stderr, "  fail %s", "Identifier"));
    return NO;
}

- (BOOL) matchLEFTARROW
{
    NSUInteger index210=_index, yythunkpos211=yythunkpos;
    yyprintf((stderr, "%s", "LEFTARROW"));
    if (![self _matchString:"<-"]) goto L212;
    if (![self matchSpacing]) goto L212;
    yyprintf((stderr, "  ok   %s", "LEFTARROW"));
    return YES;
L212:;
    _index=index210; yythunkpos=yythunkpos211;
    yyprintf((stderr, "  fail %s", "LEFTARROW"));
    return NO;
}

- (BOOL) matchLiteral
{
    NSUInteger index215=_index, yythunkpos216=yythunkpos;
    yyprintf((stderr, "%s", "Literal"));
    NSUInteger index218=_index, yythunkpos219=yythunkpos;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L221;
    yybegin = _index;
    NSUInteger index224, yythunkpos225;
L226:;
    index224=_index; yythunkpos225=yythunkpos;
    NSUInteger index230=_index, yythunkpos231=yythunkpos;
    if ([self _matchClass:(unsigned char *)"\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L227;
    _index=index230; yythunkpos=yythunkpos231;
    if (![self matchChar]) goto L227;
    goto L226;
L227:;
    _index=index224; yythunkpos=yythunkpos225;
    yyend = _index;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L221;
    if (![self matchSpacing]) goto L221;
    goto L220;
L221:;
    _index=index218; yythunkpos=yythunkpos219;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L217;
    yybegin = _index;
    NSUInteger index234, yythunkpos235;
L236:;
    index234=_index; yythunkpos235=yythunkpos;
    NSUInteger index240=_index, yythunkpos241=yythunkpos;
    if ([self _matchClass:(unsigned char *)"\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L237;
    _index=index240; yythunkpos=yythunkpos241;
    if (![self matchChar]) goto L237;
    goto L236;
L237:;
    _index=index234; yythunkpos=yythunkpos235;
    yyend = _index;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L217;
    if (![self matchSpacing]) goto L217;
    goto L220;
L220:;
    yyprintf((stderr, "  ok   %s", "Literal"));
    return YES;
L217:;
    _index=index215; yythunkpos=yythunkpos216;
    yyprintf((stderr, "  fail %s", "Literal"));
    return NO;
}

- (BOOL) matchNOT
{
    NSUInteger index242=_index, yythunkpos243=yythunkpos;
    yyprintf((stderr, "%s", "NOT"));
    if (![self _matchString:"!"]) goto L244;
    if (![self matchSpacing]) goto L244;
    yyprintf((stderr, "  ok   %s", "NOT"));
    return YES;
L244:;
    _index=index242; yythunkpos=yythunkpos243;
    yyprintf((stderr, "  fail %s", "NOT"));
    return NO;
}

- (BOOL) matchOPEN
{
    NSUInteger index247=_index, yythunkpos248=yythunkpos;
    yyprintf((stderr, "%s", "OPEN"));
    if (![self _matchString:"("]) goto L249;
    if (![self matchSpacing]) goto L249;
    yyprintf((stderr, "  ok   %s", "OPEN"));
    return YES;
L249:;
    _index=index247; yythunkpos=yythunkpos248;
    yyprintf((stderr, "  fail %s", "OPEN"));
    return NO;
}

- (BOOL) matchOPTION
{
    NSUInteger index252=_index, yythunkpos253=yythunkpos;
    yyprintf((stderr, "%s", "OPTION"));
    if (![self _matchString:"@option"]) goto L254;
    if (![self matchHorizSpace]) goto L254;
    NSUInteger index257, yythunkpos258;
L259:;
    index257=_index; yythunkpos258=yythunkpos;
    if (![self matchHorizSpace]) goto L260;
    goto L259;
L260:;
    _index=index257; yythunkpos=yythunkpos258;
    yyprintf((stderr, "  ok   %s", "OPTION"));
    return YES;
L254:;
    _index=index252; yythunkpos=yythunkpos253;
    yyprintf((stderr, "  fail %s", "OPTION"));
    return NO;
}

- (BOOL) matchPLUS
{
    NSUInteger index261=_index, yythunkpos262=yythunkpos;
    yyprintf((stderr, "%s", "PLUS"));
    if (![self _matchString:"+"]) goto L263;
    if (![self matchSpacing]) goto L263;
    yyprintf((stderr, "  ok   %s", "PLUS"));
    return YES;
L263:;
    _index=index261; yythunkpos=yythunkpos262;
    yyprintf((stderr, "  fail %s", "PLUS"));
    return NO;
}

- (BOOL) matchPROPERTY
{
    NSUInteger index266=_index, yythunkpos267=yythunkpos;
    yyprintf((stderr, "%s", "PROPERTY"));
    if (![self _matchString:"@property"]) goto L268;
    if (![self matchHorizSpace]) goto L268;
    NSUInteger index271, yythunkpos272;
L273:;
    index271=_index; yythunkpos272=yythunkpos;
    if (![self matchHorizSpace]) goto L274;
    goto L273;
L274:;
    _index=index271; yythunkpos=yythunkpos272;
    yyprintf((stderr, "  ok   %s", "PROPERTY"));
    return YES;
L268:;
    _index=index266; yythunkpos=yythunkpos267;
    yyprintf((stderr, "  fail %s", "PROPERTY"));
    return NO;
}

- (BOOL) matchPrefix
{
    NSUInteger index275=_index, yythunkpos276=yythunkpos;
    yyprintf((stderr, "%s", "Prefix"));
    NSUInteger index278=_index, yythunkpos279=yythunkpos;
    if (![self matchAND]) goto L281;
    if (![self matchSuffix]) goto L281;
    [self yyDo:@selector(yy_1_Prefix:)];
    goto L280;
L281:;
    _index=index278; yythunkpos=yythunkpos279;
    if (![self matchNOT]) goto L284;
    if (![self matchSuffix]) goto L284;
    [self yyDo:@selector(yy_2_Prefix:)];
    goto L280;
L284:;
    _index=index278; yythunkpos=yythunkpos279;
    if (![self matchAND]) goto L287;
    if (![self matchAction]) goto L287;
    [self yyDo:@selector(yy_3_Prefix:)];
    goto L280;
L287:;
    _index=index278; yythunkpos=yythunkpos279;
    if (![self matchNOT]) goto L290;
    if (![self matchAction]) goto L290;
    [self yyDo:@selector(yy_4_Prefix:)];
    goto L280;
L290:;
    _index=index278; yythunkpos=yythunkpos279;
    if (![self matchSuffix]) goto L293;
    goto L280;
L293:;
    _index=index278; yythunkpos=yythunkpos279;
    if (![self matchEffect]) goto L277;
    goto L280;
L280:;
    yyprintf((stderr, "  ok   %s", "Prefix"));
    return YES;
L277:;
    _index=index275; yythunkpos=yythunkpos276;
    yyprintf((stderr, "  fail %s", "Prefix"));
    return NO;
}

- (BOOL) matchPrimary
{
    NSUInteger index294=_index, yythunkpos295=yythunkpos;
    yyprintf((stderr, "%s", "Primary"));
    NSUInteger index297=_index, yythunkpos298=yythunkpos;
    if (![self matchIdentifier]) goto L300;
    NSUInteger index303=_index, yythunkpos304=yythunkpos;
    if ([self matchLEFTARROW]) goto L300;
    _index=index303; yythunkpos=yythunkpos304;
    [self yyDo:@selector(yy_1_Primary:)];
    goto L299;
L300:;
    _index=index297; yythunkpos=yythunkpos298;
    if (![self matchOPEN]) goto L305;
    if (![self matchExpression]) goto L305;
    if (![self matchCLOSE]) goto L305;
    goto L299;
L305:;
    _index=index297; yythunkpos=yythunkpos298;
    if (![self matchLiteral]) goto L308;
    [self yyDo:@selector(yy_2_Primary:)];
    goto L299;
L308:;
    _index=index297; yythunkpos=yythunkpos298;
    if (![self matchClass]) goto L311;
    [self yyDo:@selector(yy_3_Primary:)];
    goto L299;
L311:;
    _index=index297; yythunkpos=yythunkpos298;
    if (![self matchDOT]) goto L296;
    [self yyDo:@selector(yy_4_Primary:)];
    goto L299;
L299:;
    yyprintf((stderr, "  ok   %s", "Primary"));
    return YES;
L296:;
    _index=index294; yythunkpos=yythunkpos295;
    yyprintf((stderr, "  fail %s", "Primary"));
    return NO;
}

- (BOOL) matchPropIdentifier
{
    NSUInteger index316=_index, yythunkpos317=yythunkpos;
    yyprintf((stderr, "%s", "PropIdentifier"));
    yybegin = _index;
    if (![self matchIdentStart]) goto L318;
    NSUInteger index321, yythunkpos322;
L323:;
    index321=_index; yythunkpos322=yythunkpos;
    if (![self matchIdentCont]) goto L324;
    goto L323;
L324:;
    _index=index321; yythunkpos=yythunkpos322;
    yyend = _index;
    NSUInteger index325, yythunkpos326;
L327:;
    index325=_index; yythunkpos326=yythunkpos;
    if (![self matchHorizSpace]) goto L328;
    goto L327;
L328:;
    _index=index325; yythunkpos=yythunkpos326;
    yyprintf((stderr, "  ok   %s", "PropIdentifier"));
    return YES;
L318:;
    _index=index316; yythunkpos=yythunkpos317;
    yyprintf((stderr, "  fail %s", "PropIdentifier"));
    return NO;
}

- (BOOL) matchPropParamaters
{
    NSUInteger index329=_index, yythunkpos330=yythunkpos;
    yyprintf((stderr, "%s", "PropParamaters"));
    yybegin = _index;
    if (![self _matchString:"("]) goto L331;
    if (![self _matchClass:(unsigned char *)"\377\377\377\377\377\375\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"]) goto L331;
    NSUInteger index334, yythunkpos335;
L336:;
    index334=_index; yythunkpos335=yythunkpos;
    if (![self _matchClass:(unsigned char *)"\377\377\377\377\377\375\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"]) goto L337;
    goto L336;
L337:;
    _index=index334; yythunkpos=yythunkpos335;
    if (![self _matchString:")"]) goto L331;
    yyend = _index;
    if (![self matchHorizSpace]) goto L331;
    NSUInteger index338, yythunkpos339;
L340:;
    index338=_index; yythunkpos339=yythunkpos;
    if (![self matchHorizSpace]) goto L341;
    goto L340;
L341:;
    _index=index338; yythunkpos=yythunkpos339;
    yyprintf((stderr, "  ok   %s", "PropParamaters"));
    return YES;
L331:;
    _index=index329; yythunkpos=yythunkpos330;
    yyprintf((stderr, "  fail %s", "PropParamaters"));
    return NO;
}

- (BOOL) matchQUESTION
{
    NSUInteger index342=_index, yythunkpos343=yythunkpos;
    yyprintf((stderr, "%s", "QUESTION"));
    if (![self _matchString:"?"]) goto L344;
    if (![self matchSpacing]) goto L344;
    yyprintf((stderr, "  ok   %s", "QUESTION"));
    return YES;
L344:;
    _index=index342; yythunkpos=yythunkpos343;
    yyprintf((stderr, "  fail %s", "QUESTION"));
    return NO;
}

- (BOOL) matchRange
{
    NSUInteger index347=_index, yythunkpos348=yythunkpos;
    yyprintf((stderr, "%s", "Range"));
    NSUInteger index350=_index, yythunkpos351=yythunkpos;
    if (![self matchChar]) goto L353;
    if (![self _matchString:"-"]) goto L353;
    if (![self matchChar]) goto L353;
    goto L352;
L353:;
    _index=index350; yythunkpos=yythunkpos351;
    if (![self matchChar]) goto L349;
    goto L352;
L352:;
    yyprintf((stderr, "  ok   %s", "Range"));
    return YES;
L349:;
    _index=index347; yythunkpos=yythunkpos348;
    yyprintf((stderr, "  fail %s", "Range"));
    return NO;
}

- (BOOL) matchSLASH
{
    NSUInteger index356=_index, yythunkpos357=yythunkpos;
    yyprintf((stderr, "%s", "SLASH"));
    if (![self _matchString:"/"]) goto L358;
    if (![self matchSpacing]) goto L358;
    yyprintf((stderr, "  ok   %s", "SLASH"));
    return YES;
L358:;
    _index=index356; yythunkpos=yythunkpos357;
    yyprintf((stderr, "  fail %s", "SLASH"));
    return NO;
}

- (BOOL) matchSTAR
{
    NSUInteger index361=_index, yythunkpos362=yythunkpos;
    yyprintf((stderr, "%s", "STAR"));
    if (![self _matchString:"*"]) goto L363;
    if (![self matchSpacing]) goto L363;
    yyprintf((stderr, "  ok   %s", "STAR"));
    return YES;
L363:;
    _index=index361; yythunkpos=yythunkpos362;
    yyprintf((stderr, "  fail %s", "STAR"));
    return NO;
}

- (BOOL) matchSequence
{
    NSUInteger index366=_index, yythunkpos367=yythunkpos;
    yyprintf((stderr, "%s", "Sequence"));
    NSUInteger index371=_index, yythunkpos372=yythunkpos;
    if (![self matchPrefix]) goto L373;
    goto L374;
L373:;
    _index=index371; yythunkpos=yythunkpos372;
L374:;
    NSUInteger index375, yythunkpos376;
L377:;
    index375=_index; yythunkpos376=yythunkpos;
    if (![self matchPrefix]) goto L378;
    [self yyDo:@selector(yy_1_Sequence:)];
    goto L377;
L378:;
    _index=index375; yythunkpos=yythunkpos376;
    yyprintf((stderr, "  ok   %s", "Sequence"));
    return YES;
L368:;
    _index=index366; yythunkpos=yythunkpos367;
    yyprintf((stderr, "  fail %s", "Sequence"));
    return NO;
}

- (BOOL) matchSpace
{
    NSUInteger index381=_index, yythunkpos382=yythunkpos;
    yyprintf((stderr, "%s", "Space"));
    NSUInteger index384=_index, yythunkpos385=yythunkpos;
    if (![self _matchString:" "]) goto L387;
    goto L386;
L387:;
    _index=index384; yythunkpos=yythunkpos385;
    if (![self _matchString:"\t"]) goto L388;
    goto L386;
L388:;
    _index=index384; yythunkpos=yythunkpos385;
    if (![self matchEndOfLine]) goto L383;
    goto L386;
L386:;
    yyprintf((stderr, "  ok   %s", "Space"));
    return YES;
L383:;
    _index=index381; yythunkpos=yythunkpos382;
    yyprintf((stderr, "  fail %s", "Space"));
    return NO;
}

- (BOOL) matchSpacing
{
    NSUInteger index389=_index, yythunkpos390=yythunkpos;
    yyprintf((stderr, "%s", "Spacing"));
    NSUInteger index392, yythunkpos393;
L394:;
    index392=_index; yythunkpos393=yythunkpos;
    NSUInteger index396=_index, yythunkpos397=yythunkpos;
    if (![self matchSpace]) goto L399;
    goto L398;
L399:;
    _index=index396; yythunkpos=yythunkpos397;
    if (![self matchComment]) goto L395;
    goto L398;
L398:;
    goto L394;
L395:;
    _index=index392; yythunkpos=yythunkpos393;
    yyprintf((stderr, "  ok   %s", "Spacing"));
    return YES;
L391:;
    _index=index389; yythunkpos=yythunkpos390;
    yyprintf((stderr, "  fail %s", "Spacing"));
    return NO;
}

- (BOOL) matchSuffix
{
    NSUInteger index400=_index, yythunkpos401=yythunkpos;
    yyprintf((stderr, "%s", "Suffix"));
    if (![self matchPrimary]) goto L402;
    NSUInteger index405=_index, yythunkpos406=yythunkpos;
    NSUInteger index409=_index, yythunkpos410=yythunkpos;
    if (![self matchQUESTION]) goto L412;
    [self yyDo:@selector(yy_1_Suffix:)];
    goto L411;
L412:;
    _index=index409; yythunkpos=yythunkpos410;
    if (![self matchSTAR]) goto L415;
    [self yyDo:@selector(yy_2_Suffix:)];
    goto L411;
L415:;
    _index=index409; yythunkpos=yythunkpos410;
    if (![self matchPLUS]) goto L407;
    [self yyDo:@selector(yy_3_Suffix:)];
    goto L411;
L411:;
    goto L408;
L407:;
    _index=index405; yythunkpos=yythunkpos406;
L408:;
    yyprintf((stderr, "  ok   %s", "Suffix"));
    return YES;
L402:;
    _index=index400; yythunkpos=yythunkpos401;
    yyprintf((stderr, "  fail %s", "Suffix"));
    return NO;
}

- (BOOL) yyparsefrom:(SEL)startRule
{
    BOOL yyok;
    if (!yythunkslen)
    {
        yythunkslen= 32;
        yythunks= malloc(sizeof(yythunk) * yythunkslen);
        yybegin= yyend= yythunkpos= 0;
    }
    if (!_string)
    {
        _string = [NSString new];
        _limit = 0;
        _index = 0;
    }
    yybegin= yyend= _index;
    yythunkpos= 0;

    NSMethodSignature *sig = [[self class] instanceMethodSignatureForSelector:startRule];
    NSInvocation *invocation = [NSInvocation invocationWithMethodSignature:sig];
    [invocation setTarget:self];
    [invocation setSelector:startRule];
    [invocation invoke];
    [invocation getReturnValue:&yyok];
    if (yyok) [self yyDone];
    [self yyCommit];

    [_string release];
    _string = nil;
    [_text release];
    _text = nil;

    return yyok;
}

- (BOOL) yyparse
{
    return [self yyparsefrom:@selector(matchGrammar)];
}


//==================================================================================================
#pragma mark -
#pragma mark NSObject Methods
//==================================================================================================

- (void) dealloc
{
    free(yythunks);

    [_string release];

    [super dealloc];
}


//==================================================================================================
#pragma mark -
#pragma mark Public Methods
//==================================================================================================

- (BOOL) parse
{
    NSAssert(_dataSource != nil, @"can't call -parse without specifying a data source");
    return [self yyparse];
}


- (BOOL) parseString:(NSString *)string
{
    _string = [string copy];
    _limit  = [_string lengthOfBytesUsingEncoding:NSUTF8StringEncoding];
    _index  = 0;
    BOOL retval = [self yyparse];
    [_string release];
    _string = nil;
    return retval;
}


@end

