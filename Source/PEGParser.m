//
//  Generated by preggers 0.1.2.
//

#import "PEGParser.h"

#import "Compiler.h"

@interface PEGParser ()

- (BOOL) _matchDot;
- (BOOL) _matchChar:(int)c;
- (BOOL) _matchString:(char *)s;
- (BOOL) _matchClass:(unsigned char *)bits;
- (BOOL) matchAND;
- (BOOL) matchAction;
- (BOOL) matchBEGIN;
- (BOOL) matchCLOSE;
- (BOOL) matchChar;
- (BOOL) matchClass;
- (BOOL) matchComment;
- (BOOL) matchDOT;
- (BOOL) matchDefinition;
- (BOOL) matchEND;
- (BOOL) matchEffect;
- (BOOL) matchEndOfFile;
- (BOOL) matchEndOfLine;
- (BOOL) matchExpression;
- (BOOL) matchGrammar;
- (BOOL) matchIdentCont;
- (BOOL) matchIdentStart;
- (BOOL) matchIdentifier;
- (BOOL) matchLEFTARROW;
- (BOOL) matchLiteral;
- (BOOL) matchNOT;
- (BOOL) matchOPEN;
- (BOOL) matchPLUS;
- (BOOL) matchPrefix;
- (BOOL) matchPrimary;
- (BOOL) matchQUESTION;
- (BOOL) matchRange;
- (BOOL) matchSLASH;
- (BOOL) matchSTAR;
- (BOOL) matchSequence;
- (BOOL) matchSpace;
- (BOOL) matchSpacing;
- (BOOL) matchSuffix;

@end


@implementation PEGParser

@synthesize dataSource = _dataSource;
@synthesize compiler = _compiler;

//==================================================================================================
#pragma mark -
#pragma mark Rules
//==================================================================================================


#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define YYRULECOUNT 32

#ifdef matchDEBUG
#define yyprintf(args)	{ fprintf args; fprintf(stderr," @ %s\n",[[_string substringFromIndex:_index] UTF8String]); }
#else
#define yyprintf(args)
#endif

- (BOOL) _refill
{
    if (!self.dataSource)
        return NO;

    NSString *nextString = [self.dataSource nextString];
    if (nextString)
    {
        nextString = [_string stringByAppendingString:nextString];
        [_string release];
        _string = [nextString retain];
    }
    _limit = [_string lengthOfBytesUsingEncoding:NSUTF8StringEncoding];
    yyprintf((stderr, "refill"));
    return YES;
}

- (BOOL) _matchDot
{
    if (_index >= _limit && ![self _refill]) return NO;
    ++_index;
    return YES;
}

- (BOOL) _matchChar:(int)c
{
    if (_index >= _limit && ![self _refill]) return NO;
    if ([_string characterAtIndex:_index] == c)
    {
        ++_index;
        yyprintf((stderr, "  ok   _matchChar(%c)", c));
        return YES;
    }
    yyprintf((stderr, "  fail _matchChar(%c)", c));
    return NO;
}

- (BOOL) _matchString:(char *)s
{
    const char *cstring = [_string UTF8String];
    int saved = _index;
    while (*s)
    {
        if (_index >= _limit && ![self _refill]) return NO;
        if (cstring[_index] != *s)
        {
            _index = saved;
            return NO;
        }
        ++s;
        ++_index;
    }
    return YES;
}

- (BOOL) _matchClass:(unsigned char *)bits
{
    if (_index >= _limit && ![self _refill]) return NO;
    int c = [_string characterAtIndex:_index];
    if (bits[c >> 3] & (1 << (c & 7)))
    {
        ++_index;
        yyprintf((stderr, "  ok   _matchClass"));
        return YES;
    }
    yyprintf((stderr, "  fail _matchClass"));
    return NO;
}

- (void) yyDo:(SEL)action
{
    while (yythunkpos >= yythunkslen)
    {
        yythunkslen *= 2;
        yythunks= realloc(yythunks, sizeof(yythunk) * yythunkslen);
    }
    yythunks[yythunkpos].begin=  yybegin;
    yythunks[yythunkpos].end=    yyend;
    yythunks[yythunkpos].action= action;
    ++yythunkpos;
}

- (void) yyText:(int)begin to:(int)end
{
    int len = end - begin;
    if (len <= 0)
    {
        [_text release];
        _text = nil;
    }
    else
    {
        _text = [_string substringWithRange:NSMakeRange(begin, end-begin)];
        [_text retain];
    }
}

- (void) yyDone
{
    int pos;
    for (pos= 0;  pos < yythunkpos;  ++pos)
    {
        yythunk *thunk= &yythunks[pos];
        [self yyText:thunk->begin to:thunk->end];
        yyprintf((stderr, "DO [%d] %s %s\n", pos, [NSStringFromSelector(thunk->action) UTF8String], yytext));
        [self performSelector:thunk->action withObject:_text];
    }
    yythunkpos= 0;
}

- (void) yyCommit
{
    NSString *newString = [_string substringFromIndex:_index];
    [_string release];
    _string = [newString retain];
    _limit -= _index;
    _index = 0;

    yybegin -= _index;
    yyend -= _index;
    yythunkpos= 0;
}

- (void) yy_1_Definition:(NSString *)text
{
 [self.compiler startRule:text]; ;
}

- (void) yy_2_Definition:(NSString *)text
{
 [self.compiler parsedRule]; ;
}

- (void) yy_1_Expression:(NSString *)text
{
 [self.compiler parsedAlternate]; ;
}

- (void) yy_1_Sequence:(NSString *)text
{
 [self.compiler append]; ;
}

- (void) yy_1_Prefix:(NSString *)text
{
 [self.compiler parsedLookAhead]; ;
}

- (void) yy_2_Prefix:(NSString *)text
{
 [self.compiler parsedNegativeLookAhead]; ;
}

- (void) yy_1_Suffix:(NSString *)text
{
 [self.compiler parsedQuestion]; ;
}

- (void) yy_2_Suffix:(NSString *)text
{
 [self.compiler parsedStar]; ;
}

- (void) yy_3_Suffix:(NSString *)text
{
 [self.compiler parsedPlus]; ;
}

- (void) yy_1_Primary:(NSString *)text
{
 [self.compiler parsedIdentifier:text]; ;
}

- (void) yy_2_Primary:(NSString *)text
{
 [self.compiler parsedLiteral:text]; ;
}

- (void) yy_3_Primary:(NSString *)text
{
 [self.compiler parsedClass:text]; ;
}

- (void) yy_4_Primary:(NSString *)text
{
 [self.compiler parsedDot]; ;
}

- (void) yy_1_Effect:(NSString *)text
{
 [self.compiler parsedAction:text]; ;
}

- (void) yy_2_Effect:(NSString *)text
{
 [self.compiler beginCapture]; ;
}

- (void) yy_3_Effect:(NSString *)text
{
 [self.compiler endCapture]; ;
}

- (BOOL) matchAND
{
    NSUInteger index0=_index, yythunkpos1=yythunkpos;
    yyprintf((stderr, "%s", "AND"));
    if (![self _matchString:"&"]) goto L2;
    if (![self matchSpacing]) goto L2;
    yyprintf((stderr, "  ok   %s", "AND"));
    return YES;
L2:
    _index=index0; yythunkpos=yythunkpos1;
    yyprintf((stderr, "  fail %s", "AND"));
    return NO;
}

- (BOOL) matchAction
{
    NSUInteger index5=_index, yythunkpos6=yythunkpos;
    yyprintf((stderr, "%s", "Action"));
    if (![self _matchString:"{"]) goto L7;
    yybegin = _index;
    {}
    NSUInteger index10, yythunkpos11;
L12:
    index10=_index; yythunkpos11=yythunkpos;
    if (![self _matchClass:(unsigned char *)"\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\337\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"]) goto L13;
    goto L12;
L13:
    _index=index10; yythunkpos=yythunkpos11;
    yyend = _index;
    if (![self _matchString:"}"]) goto L7;
    if (![self matchSpacing]) goto L7;
    yyprintf((stderr, "  ok   %s", "Action"));
    return YES;
L7:
    _index=index5; yythunkpos=yythunkpos6;
    yyprintf((stderr, "  fail %s", "Action"));
    return NO;
}

- (BOOL) matchBEGIN
{
    NSUInteger index14=_index, yythunkpos15=yythunkpos;
    yyprintf((stderr, "%s", "BEGIN"));
    if (![self _matchString:"<"]) goto L16;
    if (![self matchSpacing]) goto L16;
    yyprintf((stderr, "  ok   %s", "BEGIN"));
    return YES;
L16:
    _index=index14; yythunkpos=yythunkpos15;
    yyprintf((stderr, "  fail %s", "BEGIN"));
    return NO;
}

- (BOOL) matchCLOSE
{
    NSUInteger index19=_index, yythunkpos20=yythunkpos;
    yyprintf((stderr, "%s", "CLOSE"));
    if (![self _matchString:")"]) goto L21;
    if (![self matchSpacing]) goto L21;
    yyprintf((stderr, "  ok   %s", "CLOSE"));
    return YES;
L21:
    _index=index19; yythunkpos=yythunkpos20;
    yyprintf((stderr, "  fail %s", "CLOSE"));
    return NO;
}

- (BOOL) matchChar
{
    NSUInteger index24=_index, yythunkpos25=yythunkpos;
    yyprintf((stderr, "%s", "Char"));
    NSUInteger index27=_index, yythunkpos28=yythunkpos;
    if (![self _matchString:"\\"]) goto L30;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\204\000\000\000\000\000\000\070\000\100\024\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L30;
    goto L29;
L30:
    _index=index27; yythunkpos=yythunkpos28;
    if (![self _matchString:"\\"]) goto L33;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L33;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\377\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L33;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\377\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L33;
    goto L29;
L33:
    _index=index27; yythunkpos=yythunkpos28;
    if (![self _matchString:"\\"]) goto L36;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\377\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L36;
    NSUInteger index39=_index, yythunkpos40=yythunkpos;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\377\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L41;
    goto L42;
L41:
    _index=index39; yythunkpos=yythunkpos40;
L42:
    goto L29;
L36:
    _index=index27; yythunkpos=yythunkpos28;
    NSUInteger index45=_index, yythunkpos46=yythunkpos;
    if ([self _matchString:"\\"]) goto L26;
    _index=index45; yythunkpos=yythunkpos46;
    if (![self _matchDot]) goto L26;
    goto L29;
L29:
    yyprintf((stderr, "  ok   %s", "Char"));
    return YES;
L26:
    _index=index24; yythunkpos=yythunkpos25;
    yyprintf((stderr, "  fail %s", "Char"));
    return NO;
}

- (BOOL) matchClass
{
    NSUInteger index47=_index, yythunkpos48=yythunkpos;
    yyprintf((stderr, "%s", "Class"));
    if (![self _matchString:"["]) goto L49;
    yybegin = _index;
    {}
    NSUInteger index52, yythunkpos53;
L54:
    index52=_index; yythunkpos53=yythunkpos;
    NSUInteger index58=_index, yythunkpos59=yythunkpos;
    if ([self _matchString:"]"]) goto L55;
    _index=index58; yythunkpos=yythunkpos59;
    if (![self matchRange]) goto L55;
    goto L54;
L55:
    _index=index52; yythunkpos=yythunkpos53;
    yyend = _index;
    if (![self _matchString:"]"]) goto L49;
    if (![self matchSpacing]) goto L49;
    yyprintf((stderr, "  ok   %s", "Class"));
    return YES;
L49:
    _index=index47; yythunkpos=yythunkpos48;
    yyprintf((stderr, "  fail %s", "Class"));
    return NO;
}

- (BOOL) matchComment
{
    NSUInteger index60=_index, yythunkpos61=yythunkpos;
    yyprintf((stderr, "%s", "Comment"));
    if (![self _matchString:"#"]) goto L62;
    {}
    NSUInteger index65, yythunkpos66;
L67:
    index65=_index; yythunkpos66=yythunkpos;
    NSUInteger index71=_index, yythunkpos72=yythunkpos;
    if ([self matchEndOfLine]) goto L68;
    _index=index71; yythunkpos=yythunkpos72;
    if (![self _matchDot]) goto L68;
    goto L67;
L68:
    _index=index65; yythunkpos=yythunkpos66;
    if (![self matchEndOfLine]) goto L62;
    yyprintf((stderr, "  ok   %s", "Comment"));
    return YES;
L62:
    _index=index60; yythunkpos=yythunkpos61;
    yyprintf((stderr, "  fail %s", "Comment"));
    return NO;
}

- (BOOL) matchDOT
{
    NSUInteger index73=_index, yythunkpos74=yythunkpos;
    yyprintf((stderr, "%s", "DOT"));
    if (![self _matchString:"."]) goto L75;
    if (![self matchSpacing]) goto L75;
    yyprintf((stderr, "  ok   %s", "DOT"));
    return YES;
L75:
    _index=index73; yythunkpos=yythunkpos74;
    yyprintf((stderr, "  fail %s", "DOT"));
    return NO;
}

- (BOOL) matchDefinition
{
    NSUInteger index78=_index, yythunkpos79=yythunkpos;
    yyprintf((stderr, "%s", "Definition"));
    if (![self matchIdentifier]) goto L80;
    [self yyDo:@selector(yy_1_Definition:)];
    if (![self matchLEFTARROW]) goto L80;
    if (![self matchExpression]) goto L80;
    [self yyDo:@selector(yy_2_Definition:)];
    yyprintf((stderr, "  ok   %s", "Definition"));
    return YES;
L80:
    _index=index78; yythunkpos=yythunkpos79;
    yyprintf((stderr, "  fail %s", "Definition"));
    return NO;
}

- (BOOL) matchEND
{
    NSUInteger index83=_index, yythunkpos84=yythunkpos;
    yyprintf((stderr, "%s", "END"));
    if (![self _matchString:">"]) goto L85;
    if (![self matchSpacing]) goto L85;
    yyprintf((stderr, "  ok   %s", "END"));
    return YES;
L85:
    _index=index83; yythunkpos=yythunkpos84;
    yyprintf((stderr, "  fail %s", "END"));
    return NO;
}

- (BOOL) matchEffect
{
    NSUInteger index88=_index, yythunkpos89=yythunkpos;
    yyprintf((stderr, "%s", "Effect"));
    NSUInteger index91=_index, yythunkpos92=yythunkpos;
    if (![self matchAction]) goto L94;
    [self yyDo:@selector(yy_1_Effect:)];
    goto L93;
L94:
    _index=index91; yythunkpos=yythunkpos92;
    if (![self matchBEGIN]) goto L97;
    [self yyDo:@selector(yy_2_Effect:)];
    goto L93;
L97:
    _index=index91; yythunkpos=yythunkpos92;
    if (![self matchEND]) goto L90;
    [self yyDo:@selector(yy_3_Effect:)];
    goto L93;
L93:
    yyprintf((stderr, "  ok   %s", "Effect"));
    return YES;
L90:
    _index=index88; yythunkpos=yythunkpos89;
    yyprintf((stderr, "  fail %s", "Effect"));
    return NO;
}

- (BOOL) matchEndOfFile
{
    NSUInteger index102=_index, yythunkpos103=yythunkpos;
    yyprintf((stderr, "%s", "EndOfFile"));
    NSUInteger index105=_index, yythunkpos106=yythunkpos;
    if ([self _matchDot]) goto L104;
    _index=index105; yythunkpos=yythunkpos106;
    yyprintf((stderr, "  ok   %s", "EndOfFile"));
    return YES;
L104:
    _index=index102; yythunkpos=yythunkpos103;
    yyprintf((stderr, "  fail %s", "EndOfFile"));
    return NO;
}

- (BOOL) matchEndOfLine
{
    NSUInteger index107=_index, yythunkpos108=yythunkpos;
    yyprintf((stderr, "%s", "EndOfLine"));
    NSUInteger index110=_index, yythunkpos111=yythunkpos;
    if (![self _matchString:"\r\n"]) goto L113;
    goto L112;
L113:
    _index=index110; yythunkpos=yythunkpos111;
    if (![self _matchString:"\n"]) goto L114;
    goto L112;
L114:
    _index=index110; yythunkpos=yythunkpos111;
    if (![self _matchString:"\r"]) goto L109;
    goto L112;
L112:
    yyprintf((stderr, "  ok   %s", "EndOfLine"));
    return YES;
L109:
    _index=index107; yythunkpos=yythunkpos108;
    yyprintf((stderr, "  fail %s", "EndOfLine"));
    return NO;
}

- (BOOL) matchExpression
{
    NSUInteger index115=_index, yythunkpos116=yythunkpos;
    yyprintf((stderr, "%s", "Expression"));
    if (![self matchSequence]) goto L117;
    {}
    NSUInteger index120, yythunkpos121;
L122:
    index120=_index; yythunkpos121=yythunkpos;
    if (![self matchSLASH]) goto L123;
    if (![self matchSequence]) goto L123;
    [self yyDo:@selector(yy_1_Expression:)];
    goto L122;
L123:
    _index=index120; yythunkpos=yythunkpos121;
    yyprintf((stderr, "  ok   %s", "Expression"));
    return YES;
L117:
    _index=index115; yythunkpos=yythunkpos116;
    yyprintf((stderr, "  fail %s", "Expression"));
    return NO;
}

- (BOOL) matchGrammar
{
    NSUInteger index126=_index, yythunkpos127=yythunkpos;
    yyprintf((stderr, "%s", "Grammar"));
    if (![self matchSpacing]) goto L128;
    if (![self matchDefinition]) goto L128;
    NSUInteger index131, yythunkpos132;
L133:
    index131=_index; yythunkpos132=yythunkpos;
    if (![self matchDefinition]) goto L134;
    goto L133;
L134:
    _index=index131; yythunkpos=yythunkpos132;
    if (![self matchEndOfFile]) goto L128;
    yyprintf((stderr, "  ok   %s", "Grammar"));
    return YES;
L128:
    _index=index126; yythunkpos=yythunkpos127;
    yyprintf((stderr, "  fail %s", "Grammar"));
    return NO;
}

- (BOOL) matchIdentCont
{
    NSUInteger index135=_index, yythunkpos136=yythunkpos;
    yyprintf((stderr, "%s", "IdentCont"));
    NSUInteger index138=_index, yythunkpos139=yythunkpos;
    if (![self matchIdentStart]) goto L141;
    goto L140;
L141:
    _index=index138; yythunkpos=yythunkpos139;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\377\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L137;
    goto L140;
L140:
    yyprintf((stderr, "  ok   %s", "IdentCont"));
    return YES;
L137:
    _index=index135; yythunkpos=yythunkpos136;
    yyprintf((stderr, "  fail %s", "IdentCont"));
    return NO;
}

- (BOOL) matchIdentStart
{
    NSUInteger index142=_index, yythunkpos143=yythunkpos;
    yyprintf((stderr, "%s", "IdentStart"));
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\000\000\376\377\377\207\376\377\377\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L144;
    yyprintf((stderr, "  ok   %s", "IdentStart"));
    return YES;
L144:
    _index=index142; yythunkpos=yythunkpos143;
    yyprintf((stderr, "  fail %s", "IdentStart"));
    return NO;
}

- (BOOL) matchIdentifier
{
    NSUInteger index145=_index, yythunkpos146=yythunkpos;
    yyprintf((stderr, "%s", "Identifier"));
    yybegin = _index;
    if (![self matchIdentStart]) goto L147;
    {}
    NSUInteger index150, yythunkpos151;
L152:
    index150=_index; yythunkpos151=yythunkpos;
    if (![self matchIdentCont]) goto L153;
    goto L152;
L153:
    _index=index150; yythunkpos=yythunkpos151;
    yyend = _index;
    if (![self matchSpacing]) goto L147;
    yyprintf((stderr, "  ok   %s", "Identifier"));
    return YES;
L147:
    _index=index145; yythunkpos=yythunkpos146;
    yyprintf((stderr, "  fail %s", "Identifier"));
    return NO;
}

- (BOOL) matchLEFTARROW
{
    NSUInteger index154=_index, yythunkpos155=yythunkpos;
    yyprintf((stderr, "%s", "LEFTARROW"));
    if (![self _matchString:"<-"]) goto L156;
    if (![self matchSpacing]) goto L156;
    yyprintf((stderr, "  ok   %s", "LEFTARROW"));
    return YES;
L156:
    _index=index154; yythunkpos=yythunkpos155;
    yyprintf((stderr, "  fail %s", "LEFTARROW"));
    return NO;
}

- (BOOL) matchLiteral
{
    NSUInteger index159=_index, yythunkpos160=yythunkpos;
    yyprintf((stderr, "%s", "Literal"));
    NSUInteger index162=_index, yythunkpos163=yythunkpos;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L165;
    yybegin = _index;
    {}
    NSUInteger index168, yythunkpos169;
L170:
    index168=_index; yythunkpos169=yythunkpos;
    NSUInteger index174=_index, yythunkpos175=yythunkpos;
    if ([self _matchClass:(unsigned char *)"\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L171;
    _index=index174; yythunkpos=yythunkpos175;
    if (![self matchChar]) goto L171;
    goto L170;
L171:
    _index=index168; yythunkpos=yythunkpos169;
    yyend = _index;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L165;
    if (![self matchSpacing]) goto L165;
    goto L164;
L165:
    _index=index162; yythunkpos=yythunkpos163;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L161;
    yybegin = _index;
    {}
    NSUInteger index178, yythunkpos179;
L180:
    index178=_index; yythunkpos179=yythunkpos;
    NSUInteger index184=_index, yythunkpos185=yythunkpos;
    if ([self _matchClass:(unsigned char *)"\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L181;
    _index=index184; yythunkpos=yythunkpos185;
    if (![self matchChar]) goto L181;
    goto L180;
L181:
    _index=index178; yythunkpos=yythunkpos179;
    yyend = _index;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L161;
    if (![self matchSpacing]) goto L161;
    goto L164;
L164:
    yyprintf((stderr, "  ok   %s", "Literal"));
    return YES;
L161:
    _index=index159; yythunkpos=yythunkpos160;
    yyprintf((stderr, "  fail %s", "Literal"));
    return NO;
}

- (BOOL) matchNOT
{
    NSUInteger index186=_index, yythunkpos187=yythunkpos;
    yyprintf((stderr, "%s", "NOT"));
    if (![self _matchString:"!"]) goto L188;
    if (![self matchSpacing]) goto L188;
    yyprintf((stderr, "  ok   %s", "NOT"));
    return YES;
L188:
    _index=index186; yythunkpos=yythunkpos187;
    yyprintf((stderr, "  fail %s", "NOT"));
    return NO;
}

- (BOOL) matchOPEN
{
    NSUInteger index191=_index, yythunkpos192=yythunkpos;
    yyprintf((stderr, "%s", "OPEN"));
    if (![self _matchString:"("]) goto L193;
    if (![self matchSpacing]) goto L193;
    yyprintf((stderr, "  ok   %s", "OPEN"));
    return YES;
L193:
    _index=index191; yythunkpos=yythunkpos192;
    yyprintf((stderr, "  fail %s", "OPEN"));
    return NO;
}

- (BOOL) matchPLUS
{
    NSUInteger index196=_index, yythunkpos197=yythunkpos;
    yyprintf((stderr, "%s", "PLUS"));
    if (![self _matchString:"+"]) goto L198;
    if (![self matchSpacing]) goto L198;
    yyprintf((stderr, "  ok   %s", "PLUS"));
    return YES;
L198:
    _index=index196; yythunkpos=yythunkpos197;
    yyprintf((stderr, "  fail %s", "PLUS"));
    return NO;
}

- (BOOL) matchPrefix
{
    NSUInteger index201=_index, yythunkpos202=yythunkpos;
    yyprintf((stderr, "%s", "Prefix"));
    NSUInteger index204=_index, yythunkpos205=yythunkpos;
    if (![self matchAND]) goto L207;
    if (![self matchSuffix]) goto L207;
    [self yyDo:@selector(yy_1_Prefix:)];
    goto L206;
L207:
    _index=index204; yythunkpos=yythunkpos205;
    if (![self matchNOT]) goto L210;
    if (![self matchSuffix]) goto L210;
    [self yyDo:@selector(yy_2_Prefix:)];
    goto L206;
L210:
    _index=index204; yythunkpos=yythunkpos205;
    if (![self matchSuffix]) goto L213;
    goto L206;
L213:
    _index=index204; yythunkpos=yythunkpos205;
    if (![self matchEffect]) goto L203;
    goto L206;
L206:
    yyprintf((stderr, "  ok   %s", "Prefix"));
    return YES;
L203:
    _index=index201; yythunkpos=yythunkpos202;
    yyprintf((stderr, "  fail %s", "Prefix"));
    return NO;
}

- (BOOL) matchPrimary
{
    NSUInteger index214=_index, yythunkpos215=yythunkpos;
    yyprintf((stderr, "%s", "Primary"));
    NSUInteger index217=_index, yythunkpos218=yythunkpos;
    if (![self matchIdentifier]) goto L220;
    NSUInteger index223=_index, yythunkpos224=yythunkpos;
    if ([self matchLEFTARROW]) goto L220;
    _index=index223; yythunkpos=yythunkpos224;
    [self yyDo:@selector(yy_1_Primary:)];
    goto L219;
L220:
    _index=index217; yythunkpos=yythunkpos218;
    if (![self matchOPEN]) goto L225;
    if (![self matchExpression]) goto L225;
    if (![self matchCLOSE]) goto L225;
    goto L219;
L225:
    _index=index217; yythunkpos=yythunkpos218;
    if (![self matchLiteral]) goto L228;
    [self yyDo:@selector(yy_2_Primary:)];
    goto L219;
L228:
    _index=index217; yythunkpos=yythunkpos218;
    if (![self matchClass]) goto L231;
    [self yyDo:@selector(yy_3_Primary:)];
    goto L219;
L231:
    _index=index217; yythunkpos=yythunkpos218;
    if (![self matchDOT]) goto L216;
    [self yyDo:@selector(yy_4_Primary:)];
    goto L219;
L219:
    yyprintf((stderr, "  ok   %s", "Primary"));
    return YES;
L216:
    _index=index214; yythunkpos=yythunkpos215;
    yyprintf((stderr, "  fail %s", "Primary"));
    return NO;
}

- (BOOL) matchQUESTION
{
    NSUInteger index236=_index, yythunkpos237=yythunkpos;
    yyprintf((stderr, "%s", "QUESTION"));
    if (![self _matchString:"?"]) goto L238;
    if (![self matchSpacing]) goto L238;
    yyprintf((stderr, "  ok   %s", "QUESTION"));
    return YES;
L238:
    _index=index236; yythunkpos=yythunkpos237;
    yyprintf((stderr, "  fail %s", "QUESTION"));
    return NO;
}

- (BOOL) matchRange
{
    NSUInteger index241=_index, yythunkpos242=yythunkpos;
    yyprintf((stderr, "%s", "Range"));
    NSUInteger index244=_index, yythunkpos245=yythunkpos;
    if (![self matchChar]) goto L247;
    if (![self _matchString:"-"]) goto L247;
    if (![self matchChar]) goto L247;
    goto L246;
L247:
    _index=index244; yythunkpos=yythunkpos245;
    if (![self matchChar]) goto L243;
    goto L246;
L246:
    yyprintf((stderr, "  ok   %s", "Range"));
    return YES;
L243:
    _index=index241; yythunkpos=yythunkpos242;
    yyprintf((stderr, "  fail %s", "Range"));
    return NO;
}

- (BOOL) matchSLASH
{
    NSUInteger index250=_index, yythunkpos251=yythunkpos;
    yyprintf((stderr, "%s", "SLASH"));
    if (![self _matchString:"/"]) goto L252;
    if (![self matchSpacing]) goto L252;
    yyprintf((stderr, "  ok   %s", "SLASH"));
    return YES;
L252:
    _index=index250; yythunkpos=yythunkpos251;
    yyprintf((stderr, "  fail %s", "SLASH"));
    return NO;
}

- (BOOL) matchSTAR
{
    NSUInteger index255=_index, yythunkpos256=yythunkpos;
    yyprintf((stderr, "%s", "STAR"));
    if (![self _matchString:"*"]) goto L257;
    if (![self matchSpacing]) goto L257;
    yyprintf((stderr, "  ok   %s", "STAR"));
    return YES;
L257:
    _index=index255; yythunkpos=yythunkpos256;
    yyprintf((stderr, "  fail %s", "STAR"));
    return NO;
}

- (BOOL) matchSequence
{
    NSUInteger index260=_index, yythunkpos261=yythunkpos;
    yyprintf((stderr, "%s", "Sequence"));
    NSUInteger index265=_index, yythunkpos266=yythunkpos;
    if (![self matchPrefix]) goto L267;
    goto L268;
L267:
    _index=index265; yythunkpos=yythunkpos266;
L268:
    {}
    NSUInteger index269, yythunkpos270;
L271:
    index269=_index; yythunkpos270=yythunkpos;
    if (![self matchPrefix]) goto L272;
    [self yyDo:@selector(yy_1_Sequence:)];
    goto L271;
L272:
    _index=index269; yythunkpos=yythunkpos270;
    yyprintf((stderr, "  ok   %s", "Sequence"));
    return YES;
L262:
    _index=index260; yythunkpos=yythunkpos261;
    yyprintf((stderr, "  fail %s", "Sequence"));
    return NO;
}

- (BOOL) matchSpace
{
    NSUInteger index275=_index, yythunkpos276=yythunkpos;
    yyprintf((stderr, "%s", "Space"));
    NSUInteger index278=_index, yythunkpos279=yythunkpos;
    if (![self _matchString:" "]) goto L281;
    goto L280;
L281:
    _index=index278; yythunkpos=yythunkpos279;
    if (![self _matchString:"\t"]) goto L282;
    goto L280;
L282:
    _index=index278; yythunkpos=yythunkpos279;
    if (![self matchEndOfLine]) goto L277;
    goto L280;
L280:
    yyprintf((stderr, "  ok   %s", "Space"));
    return YES;
L277:
    _index=index275; yythunkpos=yythunkpos276;
    yyprintf((stderr, "  fail %s", "Space"));
    return NO;
}

- (BOOL) matchSpacing
{
    NSUInteger index283=_index, yythunkpos284=yythunkpos;
    yyprintf((stderr, "%s", "Spacing"));
    {}
    NSUInteger index286, yythunkpos287;
L288:
    index286=_index; yythunkpos287=yythunkpos;
    NSUInteger index290=_index, yythunkpos291=yythunkpos;
    if (![self matchSpace]) goto L293;
    goto L292;
L293:
    _index=index290; yythunkpos=yythunkpos291;
    if (![self matchComment]) goto L289;
    goto L292;
L292:
    goto L288;
L289:
    _index=index286; yythunkpos=yythunkpos287;
    yyprintf((stderr, "  ok   %s", "Spacing"));
    return YES;
L285:
    _index=index283; yythunkpos=yythunkpos284;
    yyprintf((stderr, "  fail %s", "Spacing"));
    return NO;
}

- (BOOL) matchSuffix
{
    NSUInteger index294=_index, yythunkpos295=yythunkpos;
    yyprintf((stderr, "%s", "Suffix"));
    if (![self matchPrimary]) goto L296;
    NSUInteger index299=_index, yythunkpos300=yythunkpos;
    NSUInteger index303=_index, yythunkpos304=yythunkpos;
    if (![self matchQUESTION]) goto L306;
    [self yyDo:@selector(yy_1_Suffix:)];
    goto L305;
L306:
    _index=index303; yythunkpos=yythunkpos304;
    if (![self matchSTAR]) goto L309;
    [self yyDo:@selector(yy_2_Suffix:)];
    goto L305;
L309:
    _index=index303; yythunkpos=yythunkpos304;
    if (![self matchPLUS]) goto L301;
    [self yyDo:@selector(yy_3_Suffix:)];
    goto L305;
L305:
    goto L302;
L301:
    _index=index299; yythunkpos=yythunkpos300;
L302:
    yyprintf((stderr, "  ok   %s", "Suffix"));
    return YES;
L296:
    _index=index294; yythunkpos=yythunkpos295;
    yyprintf((stderr, "  fail %s", "Suffix"));
    return NO;
}

- (BOOL) yyparsefrom:(SEL)startRule
{
    BOOL yyok;
    if (!yythunkslen)
    {
        yythunkslen= 32;
        yythunks= malloc(sizeof(yythunk) * yythunkslen);
        yybegin= yyend= yythunkpos= 0;
    }
    if (!_string)
    {
        _string = [NSString new];
        _limit = 0;
        _index = 0;
    }
    yybegin= yyend= _index;
    yythunkpos= 0;

    NSMethodSignature *sig = [[self class] instanceMethodSignatureForSelector:startRule];
    NSInvocation *invocation = [NSInvocation invocationWithMethodSignature:sig];
    [invocation setTarget:self];
    [invocation setSelector:startRule];
    [invocation invoke];
    [invocation getReturnValue:&yyok];
    if (yyok) [self yyDone];
    [self yyCommit];

    [_string release];
    _string = nil;
    [_text release];
    _text = nil;

    return yyok;
}

- (BOOL) yyparse
{
    return [self yyparsefrom:@selector(matchGrammar)];
}


//==================================================================================================
#pragma mark -
#pragma mark NSObject Methods
//==================================================================================================

- (void) dealloc
{
    free(yythunks);

    [_string release];

    [super dealloc];
}


//==================================================================================================
#pragma mark -
#pragma mark Public Methods
//==================================================================================================

- (BOOL) parse
{
    NSAssert(_dataSource != nil, @"can't call -parse without specifying a data source");
    return [self yyparse];
}


- (BOOL) parseString:(NSString *)string
{
    _string = [string copy];
    _limit  = [_string lengthOfBytesUsingEncoding:NSUTF8StringEncoding];
    _index  = 0;
    BOOL retval = [self yyparse];
    [_string release];
    _string = nil;
    return retval;
}


@end

