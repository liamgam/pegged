//
//  Generated by preggers 0.2.1.
//

#import "PEGParser.h"

#import "Compiler.h"

@interface PEGParser ()

- (BOOL) _matchDot;
- (BOOL) _matchString:(char *)s;
- (BOOL) _matchClass:(unsigned char *)bits;
- (BOOL) matchAND;
- (BOOL) matchAction;
- (BOOL) matchBEGIN;
- (BOOL) matchCLOSE;
- (BOOL) matchChar;
- (BOOL) matchClass;
- (BOOL) matchComment;
- (BOOL) matchDOT;
- (BOOL) matchDeclaration;
- (BOOL) matchDefinition;
- (BOOL) matchEND;
- (BOOL) matchEffect;
- (BOOL) matchEndOfDecl;
- (BOOL) matchEndOfFile;
- (BOOL) matchEndOfLine;
- (BOOL) matchExpression;
- (BOOL) matchGrammar;
- (BOOL) matchHorizSpace;
- (BOOL) matchIdentCont;
- (BOOL) matchIdentStart;
- (BOOL) matchIdentifier;
- (BOOL) matchLEFTARROW;
- (BOOL) matchLiteral;
- (BOOL) matchNOT;
- (BOOL) matchOPEN;
- (BOOL) matchOPTION;
- (BOOL) matchPLUS;
- (BOOL) matchPROPERTY;
- (BOOL) matchPrefix;
- (BOOL) matchPrimary;
- (BOOL) matchPropIdentifier;
- (BOOL) matchPropParamaters;
- (BOOL) matchQUESTION;
- (BOOL) matchRange;
- (BOOL) matchSLASH;
- (BOOL) matchSTAR;
- (BOOL) matchSequence;
- (BOOL) matchSpace;
- (BOOL) matchSpacing;
- (BOOL) matchSuffix;

@end


@implementation PEGParser

@synthesize dataSource = _dataSource;
@synthesize compiler = _compiler;

//==================================================================================================
#pragma mark -
#pragma mark Rules
//==================================================================================================


#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#ifdef matchDEBUG
#define yyprintf(args)	{ fprintf args; fprintf(stderr," @ %s\n",[[_string substringFromIndex:_index] UTF8String]); }
#else
#define yyprintf(args)
#endif

- (BOOL) _refill
{
    if (!self.dataSource)
        return NO;

    NSString *nextString = [self.dataSource nextString];
    if (nextString)
    {
        nextString = [_string stringByAppendingString:nextString];
        [_string release];
        _string = [nextString retain];
    }
    _limit = [_string lengthOfBytesUsingEncoding:NSUTF8StringEncoding];
    yyprintf((stderr, "refill"));
    return YES;
}

- (BOOL) _matchDot
{
    if (_index >= _limit && ![self _refill]) return NO;
    ++_index;
    return YES;
}

- (BOOL) _matchString:(char *)s
{
#ifndef PEGPARSER_CASE_INSENSITIVE
    const char *cstring = [_string UTF8String];
#else
    const char *cstring = [[_string lowercaseString] UTF8String];
#endif
    int saved = _index;
    while (*s)
    {
        if (_index >= _limit && ![self _refill]) return NO;
        if (cstring[_index] != *s)
        {
            _index = saved;
    yyprintf((stderr, "  fail _matchString"));
            return NO;
        }
        ++s;
        ++_index;
    }
    yyprintf((stderr, "  ok   _matchString"));
    return YES;
}

- (BOOL) _matchClass:(unsigned char *)bits
{
    if (_index >= _limit && ![self _refill]) return NO;
    int c = [_string characterAtIndex:_index];
    if (bits[c >> 3] & (1 << (c & 7)))
    {
        ++_index;
        yyprintf((stderr, "  ok   _matchClass"));
        return YES;
    }
    yyprintf((stderr, "  fail _matchClass"));
    return NO;
}

- (void) yyDo:(SEL)action
{
    while (yythunkpos >= yythunkslen)
    {
        yythunkslen *= 2;
        yythunks= realloc(yythunks, sizeof(yythunk) * yythunkslen);
    }
    yythunks[yythunkpos].begin=  yybegin;
    yythunks[yythunkpos].end=    yyend;
    yythunks[yythunkpos].action= action;
    ++yythunkpos;
}

- (void) yyText:(int)begin to:(int)end
{
    int len = end - begin;
    if (len <= 0)
    {
        [_text release];
        _text = nil;
    }
    else
    {
        _text = [_string substringWithRange:NSMakeRange(begin, end-begin)];
        [_text retain];
    }
}

- (void) yyDone
{
    int pos;
    for (pos= 0;  pos < yythunkpos;  ++pos)
    {
        yythunk *thunk= &yythunks[pos];
        [self yyText:thunk->begin to:thunk->end];
        yyprintf((stderr, "DO [%d] %s %s\n", pos, [NSStringFromSelector(thunk->action) UTF8String], [_text UTF8String]));
        [self performSelector:thunk->action withObject:_text];
    }
    yythunkpos= 0;
}

- (void) yyCommit
{
    NSString *newString = [_string substringFromIndex:_index];
    [_string release];
    _string = [newString retain];
    _limit -= _index;
    _index = 0;

    yybegin -= _index;
    yyend -= _index;
    yythunkpos= 0;
}

- (void) yy_1_Declaration:(NSString *)text
{
 self.compiler.caseInsensitive = YES; ;
}

- (void) yy_2_Declaration:(NSString *)text
{
 [self.compiler parsedPropertyParameters:text]; ;
}

- (void) yy_3_Declaration:(NSString *)text
{
 [self.compiler parsedPropertyType:text]; ;
}

- (void) yy_4_Declaration:(NSString *)text
{
 [self.compiler parsedPropertyStars:text]; ;
}

- (void) yy_5_Declaration:(NSString *)text
{
 [self.compiler parsedPropertyName:text]; ;
}

- (void) yy_1_Definition:(NSString *)text
{
 [self.compiler startRule:text]; ;
}

- (void) yy_2_Definition:(NSString *)text
{
 [self.compiler parsedRule]; ;
}

- (void) yy_1_Expression:(NSString *)text
{
 [self.compiler parsedAlternate]; ;
}

- (void) yy_1_Sequence:(NSString *)text
{
 [self.compiler append]; ;
}

- (void) yy_1_Prefix:(NSString *)text
{
 [self.compiler parsedLookAhead]; ;
}

- (void) yy_2_Prefix:(NSString *)text
{
 [self.compiler parsedNegativeLookAhead]; ;
}

- (void) yy_3_Prefix:(NSString *)text
{
 [self.compiler parsedLookAhead:text]; ;
}

- (void) yy_4_Prefix:(NSString *)text
{
 [self.compiler parsedNegativeLookAhead:text]; ;
}

- (void) yy_1_Suffix:(NSString *)text
{
 [self.compiler parsedQuestion]; ;
}

- (void) yy_2_Suffix:(NSString *)text
{
 [self.compiler parsedStar]; ;
}

- (void) yy_3_Suffix:(NSString *)text
{
 [self.compiler parsedPlus]; ;
}

- (void) yy_1_Primary:(NSString *)text
{
 [self.compiler parsedIdentifier:text]; ;
}

- (void) yy_2_Primary:(NSString *)text
{
 [self.compiler parsedLiteral:text]; ;
}

- (void) yy_3_Primary:(NSString *)text
{
 [self.compiler parsedClass:text]; ;
}

- (void) yy_4_Primary:(NSString *)text
{
 [self.compiler parsedDot]; ;
}

- (void) yy_1_Effect:(NSString *)text
{
 [self.compiler parsedAction:text]; ;
}

- (void) yy_2_Effect:(NSString *)text
{
 [self.compiler beginCapture]; ;
}

- (void) yy_3_Effect:(NSString *)text
{
 [self.compiler endCapture]; ;
}

- (BOOL) matchAND
{
    NSUInteger index0=_index, yythunkpos1=yythunkpos;
    yyprintf((stderr, "%s", "AND"));
    if (![self _matchString:"&"]) goto L2;
    if (![self matchSpacing]) goto L2;
    yyprintf((stderr, "  ok   %s", "AND"));
    return YES;
L2:
    _index=index0; yythunkpos=yythunkpos1;
    yyprintf((stderr, "  fail %s", "AND"));
    return NO;
}

- (BOOL) matchAction
{
    NSUInteger index5=_index, yythunkpos6=yythunkpos;
    yyprintf((stderr, "%s", "Action"));
    if (![self _matchString:"{"]) goto L7;
    yybegin = _index;
    ;
    NSUInteger index10, yythunkpos11;
L12:
    index10=_index; yythunkpos11=yythunkpos;
    if (![self _matchClass:(unsigned char *)"\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\337\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"]) goto L13;
    goto L12;
L13:
    _index=index10; yythunkpos=yythunkpos11;
    yyend = _index;
    if (![self _matchString:"}"]) goto L7;
    if (![self matchSpacing]) goto L7;
    yyprintf((stderr, "  ok   %s", "Action"));
    return YES;
L7:
    _index=index5; yythunkpos=yythunkpos6;
    yyprintf((stderr, "  fail %s", "Action"));
    return NO;
}

- (BOOL) matchBEGIN
{
    NSUInteger index14=_index, yythunkpos15=yythunkpos;
    yyprintf((stderr, "%s", "BEGIN"));
    if (![self _matchString:"<"]) goto L16;
    if (![self matchSpacing]) goto L16;
    yyprintf((stderr, "  ok   %s", "BEGIN"));
    return YES;
L16:
    _index=index14; yythunkpos=yythunkpos15;
    yyprintf((stderr, "  fail %s", "BEGIN"));
    return NO;
}

- (BOOL) matchCLOSE
{
    NSUInteger index19=_index, yythunkpos20=yythunkpos;
    yyprintf((stderr, "%s", "CLOSE"));
    if (![self _matchString:")"]) goto L21;
    if (![self matchSpacing]) goto L21;
    yyprintf((stderr, "  ok   %s", "CLOSE"));
    return YES;
L21:
    _index=index19; yythunkpos=yythunkpos20;
    yyprintf((stderr, "  fail %s", "CLOSE"));
    return NO;
}

- (BOOL) matchChar
{
    NSUInteger index24=_index, yythunkpos25=yythunkpos;
    yyprintf((stderr, "%s", "Char"));
    NSUInteger index27=_index, yythunkpos28=yythunkpos;
    if (![self _matchString:"\\"]) goto L30;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\204\000\000\000\000\000\000\070\000\100\024\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L30;
    goto L29;
L30:
    _index=index27; yythunkpos=yythunkpos28;
    if (![self _matchString:"\\"]) goto L33;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L33;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\377\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L33;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\377\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L33;
    goto L29;
L33:
    _index=index27; yythunkpos=yythunkpos28;
    if (![self _matchString:"\\"]) goto L36;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\377\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L36;
    NSUInteger index39=_index, yythunkpos40=yythunkpos;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\377\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L41;
    goto L42;
L41:
    _index=index39; yythunkpos=yythunkpos40;
L42:
    goto L29;
L36:
    _index=index27; yythunkpos=yythunkpos28;
    NSUInteger index45=_index, yythunkpos46=yythunkpos;
    if ([self _matchString:"\\"]) goto L26;
    _index=index45; yythunkpos=yythunkpos46;
    if (![self _matchDot]) goto L26;
    goto L29;
L29:
    yyprintf((stderr, "  ok   %s", "Char"));
    return YES;
L26:
    _index=index24; yythunkpos=yythunkpos25;
    yyprintf((stderr, "  fail %s", "Char"));
    return NO;
}

- (BOOL) matchClass
{
    NSUInteger index47=_index, yythunkpos48=yythunkpos;
    yyprintf((stderr, "%s", "Class"));
    if (![self _matchString:"["]) goto L49;
    yybegin = _index;
    ;
    NSUInteger index52, yythunkpos53;
L54:
    index52=_index; yythunkpos53=yythunkpos;
    NSUInteger index58=_index, yythunkpos59=yythunkpos;
    if ([self _matchString:"]"]) goto L55;
    _index=index58; yythunkpos=yythunkpos59;
    if (![self matchRange]) goto L55;
    goto L54;
L55:
    _index=index52; yythunkpos=yythunkpos53;
    yyend = _index;
    if (![self _matchString:"]"]) goto L49;
    if (![self matchSpacing]) goto L49;
    yyprintf((stderr, "  ok   %s", "Class"));
    return YES;
L49:
    _index=index47; yythunkpos=yythunkpos48;
    yyprintf((stderr, "  fail %s", "Class"));
    return NO;
}

- (BOOL) matchComment
{
    NSUInteger index60=_index, yythunkpos61=yythunkpos;
    yyprintf((stderr, "%s", "Comment"));
    if (![self _matchString:"#"]) goto L62;
    ;
    NSUInteger index65, yythunkpos66;
L67:
    index65=_index; yythunkpos66=yythunkpos;
    NSUInteger index71=_index, yythunkpos72=yythunkpos;
    if ([self matchEndOfLine]) goto L68;
    _index=index71; yythunkpos=yythunkpos72;
    if (![self _matchDot]) goto L68;
    goto L67;
L68:
    _index=index65; yythunkpos=yythunkpos66;
    if (![self matchEndOfLine]) goto L62;
    yyprintf((stderr, "  ok   %s", "Comment"));
    return YES;
L62:
    _index=index60; yythunkpos=yythunkpos61;
    yyprintf((stderr, "  fail %s", "Comment"));
    return NO;
}

- (BOOL) matchDOT
{
    NSUInteger index73=_index, yythunkpos74=yythunkpos;
    yyprintf((stderr, "%s", "DOT"));
    if (![self _matchString:"."]) goto L75;
    if (![self matchSpacing]) goto L75;
    yyprintf((stderr, "  ok   %s", "DOT"));
    return YES;
L75:
    _index=index73; yythunkpos=yythunkpos74;
    yyprintf((stderr, "  fail %s", "DOT"));
    return NO;
}

- (BOOL) matchDeclaration
{
    NSUInteger index78=_index, yythunkpos79=yythunkpos;
    yyprintf((stderr, "%s", "Declaration"));
    NSUInteger index81=_index, yythunkpos82=yythunkpos;
    if (![self matchOPTION]) goto L84;
    if (![self _matchString:"case-insensitive"]) goto L84;
    ;
    NSUInteger index87, yythunkpos88;
L89:
    index87=_index; yythunkpos88=yythunkpos;
    if (![self matchHorizSpace]) goto L90;
    goto L89;
L90:
    _index=index87; yythunkpos=yythunkpos88;
    if (![self matchEndOfDecl]) goto L84;
    [self yyDo:@selector(yy_1_Declaration:)];
    goto L83;
L84:
    _index=index81; yythunkpos=yythunkpos82;
    if (![self matchPROPERTY]) goto L80;
    NSUInteger index93=_index, yythunkpos94=yythunkpos;
    if (![self matchPropParamaters]) goto L95;
    [self yyDo:@selector(yy_2_Declaration:)];
    goto L96;
L95:
    _index=index93; yythunkpos=yythunkpos94;
L96:
    if (![self matchPropIdentifier]) goto L80;
    [self yyDo:@selector(yy_3_Declaration:)];
    yybegin = _index;
    ;
    NSUInteger index99, yythunkpos100;
L101:
    index99=_index; yythunkpos100=yythunkpos;
    if (![self _matchString:"*"]) goto L102;
    goto L101;
L102:
    _index=index99; yythunkpos=yythunkpos100;
    yyend = _index;
    ;
    NSUInteger index103, yythunkpos104;
L105:
    index103=_index; yythunkpos104=yythunkpos;
    if (![self matchHorizSpace]) goto L106;
    goto L105;
L106:
    _index=index103; yythunkpos=yythunkpos104;
    [self yyDo:@selector(yy_4_Declaration:)];
    if (![self matchPropIdentifier]) goto L80;
    if (![self matchEndOfDecl]) goto L80;
    [self yyDo:@selector(yy_5_Declaration:)];
    goto L83;
L83:
    yyprintf((stderr, "  ok   %s", "Declaration"));
    return YES;
L80:
    _index=index78; yythunkpos=yythunkpos79;
    yyprintf((stderr, "  fail %s", "Declaration"));
    return NO;
}

- (BOOL) matchDefinition
{
    NSUInteger index107=_index, yythunkpos108=yythunkpos;
    yyprintf((stderr, "%s", "Definition"));
    if (![self matchIdentifier]) goto L109;
    [self yyDo:@selector(yy_1_Definition:)];
    if (![self matchLEFTARROW]) goto L109;
    if (![self matchExpression]) goto L109;
    [self yyDo:@selector(yy_2_Definition:)];
    yyprintf((stderr, "  ok   %s", "Definition"));
    return YES;
L109:
    _index=index107; yythunkpos=yythunkpos108;
    yyprintf((stderr, "  fail %s", "Definition"));
    return NO;
}

- (BOOL) matchEND
{
    NSUInteger index112=_index, yythunkpos113=yythunkpos;
    yyprintf((stderr, "%s", "END"));
    if (![self _matchString:">"]) goto L114;
    if (![self matchSpacing]) goto L114;
    yyprintf((stderr, "  ok   %s", "END"));
    return YES;
L114:
    _index=index112; yythunkpos=yythunkpos113;
    yyprintf((stderr, "  fail %s", "END"));
    return NO;
}

- (BOOL) matchEffect
{
    NSUInteger index117=_index, yythunkpos118=yythunkpos;
    yyprintf((stderr, "%s", "Effect"));
    NSUInteger index120=_index, yythunkpos121=yythunkpos;
    if (![self matchAction]) goto L123;
    [self yyDo:@selector(yy_1_Effect:)];
    goto L122;
L123:
    _index=index120; yythunkpos=yythunkpos121;
    if (![self matchBEGIN]) goto L126;
    [self yyDo:@selector(yy_2_Effect:)];
    goto L122;
L126:
    _index=index120; yythunkpos=yythunkpos121;
    if (![self matchEND]) goto L119;
    [self yyDo:@selector(yy_3_Effect:)];
    goto L122;
L122:
    yyprintf((stderr, "  ok   %s", "Effect"));
    return YES;
L119:
    _index=index117; yythunkpos=yythunkpos118;
    yyprintf((stderr, "  fail %s", "Effect"));
    return NO;
}

- (BOOL) matchEndOfDecl
{
    NSUInteger index131=_index, yythunkpos132=yythunkpos;
    yyprintf((stderr, "%s", "EndOfDecl"));
    if (![self _matchString:";"]) goto L133;
    ;
    NSUInteger index136, yythunkpos137;
L138:
    index136=_index; yythunkpos137=yythunkpos;
    if (![self matchHorizSpace]) goto L139;
    goto L138;
L139:
    _index=index136; yythunkpos=yythunkpos137;
    NSUInteger index140=_index, yythunkpos141=yythunkpos;
    if (![self matchEndOfLine]) goto L143;
    goto L142;
L143:
    _index=index140; yythunkpos=yythunkpos141;
    if (![self matchComment]) goto L133;
    goto L142;
L142:
    yyprintf((stderr, "  ok   %s", "EndOfDecl"));
    return YES;
L133:
    _index=index131; yythunkpos=yythunkpos132;
    yyprintf((stderr, "  fail %s", "EndOfDecl"));
    return NO;
}

- (BOOL) matchEndOfFile
{
    NSUInteger index144=_index, yythunkpos145=yythunkpos;
    yyprintf((stderr, "%s", "EndOfFile"));
    NSUInteger index147=_index, yythunkpos148=yythunkpos;
    if ([self _matchDot]) goto L146;
    _index=index147; yythunkpos=yythunkpos148;
    yyprintf((stderr, "  ok   %s", "EndOfFile"));
    return YES;
L146:
    _index=index144; yythunkpos=yythunkpos145;
    yyprintf((stderr, "  fail %s", "EndOfFile"));
    return NO;
}

- (BOOL) matchEndOfLine
{
    NSUInteger index149=_index, yythunkpos150=yythunkpos;
    yyprintf((stderr, "%s", "EndOfLine"));
    NSUInteger index152=_index, yythunkpos153=yythunkpos;
    if (![self _matchString:"\r\n"]) goto L155;
    goto L154;
L155:
    _index=index152; yythunkpos=yythunkpos153;
    if (![self _matchString:"\n"]) goto L156;
    goto L154;
L156:
    _index=index152; yythunkpos=yythunkpos153;
    if (![self _matchString:"\r"]) goto L151;
    goto L154;
L154:
    yyprintf((stderr, "  ok   %s", "EndOfLine"));
    return YES;
L151:
    _index=index149; yythunkpos=yythunkpos150;
    yyprintf((stderr, "  fail %s", "EndOfLine"));
    return NO;
}

- (BOOL) matchExpression
{
    NSUInteger index157=_index, yythunkpos158=yythunkpos;
    yyprintf((stderr, "%s", "Expression"));
    if (![self matchSequence]) goto L159;
    ;
    NSUInteger index162, yythunkpos163;
L164:
    index162=_index; yythunkpos163=yythunkpos;
    if (![self matchSLASH]) goto L165;
    if (![self matchSequence]) goto L165;
    [self yyDo:@selector(yy_1_Expression:)];
    goto L164;
L165:
    _index=index162; yythunkpos=yythunkpos163;
    yyprintf((stderr, "  ok   %s", "Expression"));
    return YES;
L159:
    _index=index157; yythunkpos=yythunkpos158;
    yyprintf((stderr, "  fail %s", "Expression"));
    return NO;
}

- (BOOL) matchGrammar
{
    NSUInteger index168=_index, yythunkpos169=yythunkpos;
    yyprintf((stderr, "%s", "Grammar"));
    if (![self matchSpacing]) goto L170;
    ;
    NSUInteger index173, yythunkpos174;
L175:
    index173=_index; yythunkpos174=yythunkpos;
    if (![self matchDeclaration]) goto L176;
    goto L175;
L176:
    _index=index173; yythunkpos=yythunkpos174;
    if (![self matchSpacing]) goto L170;
    if (![self matchDefinition]) goto L170;
    ;
    NSUInteger index177, yythunkpos178;
L179:
    index177=_index; yythunkpos178=yythunkpos;
    if (![self matchDefinition]) goto L180;
    goto L179;
L180:
    _index=index177; yythunkpos=yythunkpos178;
    if (![self matchEndOfFile]) goto L170;
    yyprintf((stderr, "  ok   %s", "Grammar"));
    return YES;
L170:
    _index=index168; yythunkpos=yythunkpos169;
    yyprintf((stderr, "  fail %s", "Grammar"));
    return NO;
}

- (BOOL) matchHorizSpace
{
    NSUInteger index181=_index, yythunkpos182=yythunkpos;
    yyprintf((stderr, "%s", "HorizSpace"));
    NSUInteger index184=_index, yythunkpos185=yythunkpos;
    if (![self _matchString:" "]) goto L187;
    goto L186;
L187:
    _index=index184; yythunkpos=yythunkpos185;
    if (![self _matchString:"\t"]) goto L183;
    goto L186;
L186:
    yyprintf((stderr, "  ok   %s", "HorizSpace"));
    return YES;
L183:
    _index=index181; yythunkpos=yythunkpos182;
    yyprintf((stderr, "  fail %s", "HorizSpace"));
    return NO;
}

- (BOOL) matchIdentCont
{
    NSUInteger index188=_index, yythunkpos189=yythunkpos;
    yyprintf((stderr, "%s", "IdentCont"));
    NSUInteger index191=_index, yythunkpos192=yythunkpos;
    if (![self matchIdentStart]) goto L194;
    goto L193;
L194:
    _index=index191; yythunkpos=yythunkpos192;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\377\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L190;
    goto L193;
L193:
    yyprintf((stderr, "  ok   %s", "IdentCont"));
    return YES;
L190:
    _index=index188; yythunkpos=yythunkpos189;
    yyprintf((stderr, "  fail %s", "IdentCont"));
    return NO;
}

- (BOOL) matchIdentStart
{
    NSUInteger index195=_index, yythunkpos196=yythunkpos;
    yyprintf((stderr, "%s", "IdentStart"));
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\000\000\376\377\377\207\376\377\377\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L197;
    yyprintf((stderr, "  ok   %s", "IdentStart"));
    return YES;
L197:
    _index=index195; yythunkpos=yythunkpos196;
    yyprintf((stderr, "  fail %s", "IdentStart"));
    return NO;
}

- (BOOL) matchIdentifier
{
    NSUInteger index198=_index, yythunkpos199=yythunkpos;
    yyprintf((stderr, "%s", "Identifier"));
    yybegin = _index;
    if (![self matchIdentStart]) goto L200;
    ;
    NSUInteger index203, yythunkpos204;
L205:
    index203=_index; yythunkpos204=yythunkpos;
    if (![self matchIdentCont]) goto L206;
    goto L205;
L206:
    _index=index203; yythunkpos=yythunkpos204;
    yyend = _index;
    if (![self matchSpacing]) goto L200;
    yyprintf((stderr, "  ok   %s", "Identifier"));
    return YES;
L200:
    _index=index198; yythunkpos=yythunkpos199;
    yyprintf((stderr, "  fail %s", "Identifier"));
    return NO;
}

- (BOOL) matchLEFTARROW
{
    NSUInteger index207=_index, yythunkpos208=yythunkpos;
    yyprintf((stderr, "%s", "LEFTARROW"));
    if (![self _matchString:"<-"]) goto L209;
    if (![self matchSpacing]) goto L209;
    yyprintf((stderr, "  ok   %s", "LEFTARROW"));
    return YES;
L209:
    _index=index207; yythunkpos=yythunkpos208;
    yyprintf((stderr, "  fail %s", "LEFTARROW"));
    return NO;
}

- (BOOL) matchLiteral
{
    NSUInteger index212=_index, yythunkpos213=yythunkpos;
    yyprintf((stderr, "%s", "Literal"));
    NSUInteger index215=_index, yythunkpos216=yythunkpos;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L218;
    yybegin = _index;
    ;
    NSUInteger index221, yythunkpos222;
L223:
    index221=_index; yythunkpos222=yythunkpos;
    NSUInteger index227=_index, yythunkpos228=yythunkpos;
    if ([self _matchClass:(unsigned char *)"\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L224;
    _index=index227; yythunkpos=yythunkpos228;
    if (![self matchChar]) goto L224;
    goto L223;
L224:
    _index=index221; yythunkpos=yythunkpos222;
    yyend = _index;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L218;
    if (![self matchSpacing]) goto L218;
    goto L217;
L218:
    _index=index215; yythunkpos=yythunkpos216;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L214;
    yybegin = _index;
    ;
    NSUInteger index231, yythunkpos232;
L233:
    index231=_index; yythunkpos232=yythunkpos;
    NSUInteger index237=_index, yythunkpos238=yythunkpos;
    if ([self _matchClass:(unsigned char *)"\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L234;
    _index=index237; yythunkpos=yythunkpos238;
    if (![self matchChar]) goto L234;
    goto L233;
L234:
    _index=index231; yythunkpos=yythunkpos232;
    yyend = _index;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L214;
    if (![self matchSpacing]) goto L214;
    goto L217;
L217:
    yyprintf((stderr, "  ok   %s", "Literal"));
    return YES;
L214:
    _index=index212; yythunkpos=yythunkpos213;
    yyprintf((stderr, "  fail %s", "Literal"));
    return NO;
}

- (BOOL) matchNOT
{
    NSUInteger index239=_index, yythunkpos240=yythunkpos;
    yyprintf((stderr, "%s", "NOT"));
    if (![self _matchString:"!"]) goto L241;
    if (![self matchSpacing]) goto L241;
    yyprintf((stderr, "  ok   %s", "NOT"));
    return YES;
L241:
    _index=index239; yythunkpos=yythunkpos240;
    yyprintf((stderr, "  fail %s", "NOT"));
    return NO;
}

- (BOOL) matchOPEN
{
    NSUInteger index244=_index, yythunkpos245=yythunkpos;
    yyprintf((stderr, "%s", "OPEN"));
    if (![self _matchString:"("]) goto L246;
    if (![self matchSpacing]) goto L246;
    yyprintf((stderr, "  ok   %s", "OPEN"));
    return YES;
L246:
    _index=index244; yythunkpos=yythunkpos245;
    yyprintf((stderr, "  fail %s", "OPEN"));
    return NO;
}

- (BOOL) matchOPTION
{
    NSUInteger index249=_index, yythunkpos250=yythunkpos;
    yyprintf((stderr, "%s", "OPTION"));
    if (![self _matchString:"@option"]) goto L251;
    if (![self matchHorizSpace]) goto L251;
    ;
    NSUInteger index254, yythunkpos255;
L256:
    index254=_index; yythunkpos255=yythunkpos;
    if (![self matchHorizSpace]) goto L257;
    goto L256;
L257:
    _index=index254; yythunkpos=yythunkpos255;
    yyprintf((stderr, "  ok   %s", "OPTION"));
    return YES;
L251:
    _index=index249; yythunkpos=yythunkpos250;
    yyprintf((stderr, "  fail %s", "OPTION"));
    return NO;
}

- (BOOL) matchPLUS
{
    NSUInteger index258=_index, yythunkpos259=yythunkpos;
    yyprintf((stderr, "%s", "PLUS"));
    if (![self _matchString:"+"]) goto L260;
    if (![self matchSpacing]) goto L260;
    yyprintf((stderr, "  ok   %s", "PLUS"));
    return YES;
L260:
    _index=index258; yythunkpos=yythunkpos259;
    yyprintf((stderr, "  fail %s", "PLUS"));
    return NO;
}

- (BOOL) matchPROPERTY
{
    NSUInteger index263=_index, yythunkpos264=yythunkpos;
    yyprintf((stderr, "%s", "PROPERTY"));
    if (![self _matchString:"@property"]) goto L265;
    if (![self matchHorizSpace]) goto L265;
    ;
    NSUInteger index268, yythunkpos269;
L270:
    index268=_index; yythunkpos269=yythunkpos;
    if (![self matchHorizSpace]) goto L271;
    goto L270;
L271:
    _index=index268; yythunkpos=yythunkpos269;
    yyprintf((stderr, "  ok   %s", "PROPERTY"));
    return YES;
L265:
    _index=index263; yythunkpos=yythunkpos264;
    yyprintf((stderr, "  fail %s", "PROPERTY"));
    return NO;
}

- (BOOL) matchPrefix
{
    NSUInteger index272=_index, yythunkpos273=yythunkpos;
    yyprintf((stderr, "%s", "Prefix"));
    NSUInteger index275=_index, yythunkpos276=yythunkpos;
    if (![self matchAND]) goto L278;
    if (![self matchSuffix]) goto L278;
    [self yyDo:@selector(yy_1_Prefix:)];
    goto L277;
L278:
    _index=index275; yythunkpos=yythunkpos276;
    if (![self matchNOT]) goto L281;
    if (![self matchSuffix]) goto L281;
    [self yyDo:@selector(yy_2_Prefix:)];
    goto L277;
L281:
    _index=index275; yythunkpos=yythunkpos276;
    if (![self matchAND]) goto L284;
    if (![self matchAction]) goto L284;
    [self yyDo:@selector(yy_3_Prefix:)];
    goto L277;
L284:
    _index=index275; yythunkpos=yythunkpos276;
    if (![self matchNOT]) goto L287;
    if (![self matchAction]) goto L287;
    [self yyDo:@selector(yy_4_Prefix:)];
    goto L277;
L287:
    _index=index275; yythunkpos=yythunkpos276;
    if (![self matchSuffix]) goto L290;
    goto L277;
L290:
    _index=index275; yythunkpos=yythunkpos276;
    if (![self matchEffect]) goto L274;
    goto L277;
L277:
    yyprintf((stderr, "  ok   %s", "Prefix"));
    return YES;
L274:
    _index=index272; yythunkpos=yythunkpos273;
    yyprintf((stderr, "  fail %s", "Prefix"));
    return NO;
}

- (BOOL) matchPrimary
{
    NSUInteger index291=_index, yythunkpos292=yythunkpos;
    yyprintf((stderr, "%s", "Primary"));
    NSUInteger index294=_index, yythunkpos295=yythunkpos;
    if (![self matchIdentifier]) goto L297;
    NSUInteger index300=_index, yythunkpos301=yythunkpos;
    if ([self matchLEFTARROW]) goto L297;
    _index=index300; yythunkpos=yythunkpos301;
    [self yyDo:@selector(yy_1_Primary:)];
    goto L296;
L297:
    _index=index294; yythunkpos=yythunkpos295;
    if (![self matchOPEN]) goto L302;
    if (![self matchExpression]) goto L302;
    if (![self matchCLOSE]) goto L302;
    goto L296;
L302:
    _index=index294; yythunkpos=yythunkpos295;
    if (![self matchLiteral]) goto L305;
    [self yyDo:@selector(yy_2_Primary:)];
    goto L296;
L305:
    _index=index294; yythunkpos=yythunkpos295;
    if (![self matchClass]) goto L308;
    [self yyDo:@selector(yy_3_Primary:)];
    goto L296;
L308:
    _index=index294; yythunkpos=yythunkpos295;
    if (![self matchDOT]) goto L293;
    [self yyDo:@selector(yy_4_Primary:)];
    goto L296;
L296:
    yyprintf((stderr, "  ok   %s", "Primary"));
    return YES;
L293:
    _index=index291; yythunkpos=yythunkpos292;
    yyprintf((stderr, "  fail %s", "Primary"));
    return NO;
}

- (BOOL) matchPropIdentifier
{
    NSUInteger index313=_index, yythunkpos314=yythunkpos;
    yyprintf((stderr, "%s", "PropIdentifier"));
    yybegin = _index;
    if (![self matchIdentStart]) goto L315;
    ;
    NSUInteger index318, yythunkpos319;
L320:
    index318=_index; yythunkpos319=yythunkpos;
    if (![self matchIdentCont]) goto L321;
    goto L320;
L321:
    _index=index318; yythunkpos=yythunkpos319;
    yyend = _index;
    ;
    NSUInteger index322, yythunkpos323;
L324:
    index322=_index; yythunkpos323=yythunkpos;
    if (![self matchHorizSpace]) goto L325;
    goto L324;
L325:
    _index=index322; yythunkpos=yythunkpos323;
    yyprintf((stderr, "  ok   %s", "PropIdentifier"));
    return YES;
L315:
    _index=index313; yythunkpos=yythunkpos314;
    yyprintf((stderr, "  fail %s", "PropIdentifier"));
    return NO;
}

- (BOOL) matchPropParamaters
{
    NSUInteger index326=_index, yythunkpos327=yythunkpos;
    yyprintf((stderr, "%s", "PropParamaters"));
    yybegin = _index;
    if (![self _matchString:"("]) goto L328;
    if (![self _matchClass:(unsigned char *)"\377\377\377\377\377\375\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"]) goto L328;
    ;
    NSUInteger index331, yythunkpos332;
L333:
    index331=_index; yythunkpos332=yythunkpos;
    if (![self _matchClass:(unsigned char *)"\377\377\377\377\377\375\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"]) goto L334;
    goto L333;
L334:
    _index=index331; yythunkpos=yythunkpos332;
    if (![self _matchString:")"]) goto L328;
    yyend = _index;
    if (![self matchHorizSpace]) goto L328;
    ;
    NSUInteger index335, yythunkpos336;
L337:
    index335=_index; yythunkpos336=yythunkpos;
    if (![self matchHorizSpace]) goto L338;
    goto L337;
L338:
    _index=index335; yythunkpos=yythunkpos336;
    yyprintf((stderr, "  ok   %s", "PropParamaters"));
    return YES;
L328:
    _index=index326; yythunkpos=yythunkpos327;
    yyprintf((stderr, "  fail %s", "PropParamaters"));
    return NO;
}

- (BOOL) matchQUESTION
{
    NSUInteger index339=_index, yythunkpos340=yythunkpos;
    yyprintf((stderr, "%s", "QUESTION"));
    if (![self _matchString:"?"]) goto L341;
    if (![self matchSpacing]) goto L341;
    yyprintf((stderr, "  ok   %s", "QUESTION"));
    return YES;
L341:
    _index=index339; yythunkpos=yythunkpos340;
    yyprintf((stderr, "  fail %s", "QUESTION"));
    return NO;
}

- (BOOL) matchRange
{
    NSUInteger index344=_index, yythunkpos345=yythunkpos;
    yyprintf((stderr, "%s", "Range"));
    NSUInteger index347=_index, yythunkpos348=yythunkpos;
    if (![self matchChar]) goto L350;
    if (![self _matchString:"-"]) goto L350;
    if (![self matchChar]) goto L350;
    goto L349;
L350:
    _index=index347; yythunkpos=yythunkpos348;
    if (![self matchChar]) goto L346;
    goto L349;
L349:
    yyprintf((stderr, "  ok   %s", "Range"));
    return YES;
L346:
    _index=index344; yythunkpos=yythunkpos345;
    yyprintf((stderr, "  fail %s", "Range"));
    return NO;
}

- (BOOL) matchSLASH
{
    NSUInteger index353=_index, yythunkpos354=yythunkpos;
    yyprintf((stderr, "%s", "SLASH"));
    if (![self _matchString:"/"]) goto L355;
    if (![self matchSpacing]) goto L355;
    yyprintf((stderr, "  ok   %s", "SLASH"));
    return YES;
L355:
    _index=index353; yythunkpos=yythunkpos354;
    yyprintf((stderr, "  fail %s", "SLASH"));
    return NO;
}

- (BOOL) matchSTAR
{
    NSUInteger index358=_index, yythunkpos359=yythunkpos;
    yyprintf((stderr, "%s", "STAR"));
    if (![self _matchString:"*"]) goto L360;
    if (![self matchSpacing]) goto L360;
    yyprintf((stderr, "  ok   %s", "STAR"));
    return YES;
L360:
    _index=index358; yythunkpos=yythunkpos359;
    yyprintf((stderr, "  fail %s", "STAR"));
    return NO;
}

- (BOOL) matchSequence
{
    NSUInteger index363=_index, yythunkpos364=yythunkpos;
    yyprintf((stderr, "%s", "Sequence"));
    NSUInteger index368=_index, yythunkpos369=yythunkpos;
    if (![self matchPrefix]) goto L370;
    goto L371;
L370:
    _index=index368; yythunkpos=yythunkpos369;
L371:
    ;
    NSUInteger index372, yythunkpos373;
L374:
    index372=_index; yythunkpos373=yythunkpos;
    if (![self matchPrefix]) goto L375;
    [self yyDo:@selector(yy_1_Sequence:)];
    goto L374;
L375:
    _index=index372; yythunkpos=yythunkpos373;
    yyprintf((stderr, "  ok   %s", "Sequence"));
    return YES;
L365:
    _index=index363; yythunkpos=yythunkpos364;
    yyprintf((stderr, "  fail %s", "Sequence"));
    return NO;
}

- (BOOL) matchSpace
{
    NSUInteger index378=_index, yythunkpos379=yythunkpos;
    yyprintf((stderr, "%s", "Space"));
    NSUInteger index381=_index, yythunkpos382=yythunkpos;
    if (![self _matchString:" "]) goto L384;
    goto L383;
L384:
    _index=index381; yythunkpos=yythunkpos382;
    if (![self _matchString:"\t"]) goto L385;
    goto L383;
L385:
    _index=index381; yythunkpos=yythunkpos382;
    if (![self matchEndOfLine]) goto L380;
    goto L383;
L383:
    yyprintf((stderr, "  ok   %s", "Space"));
    return YES;
L380:
    _index=index378; yythunkpos=yythunkpos379;
    yyprintf((stderr, "  fail %s", "Space"));
    return NO;
}

- (BOOL) matchSpacing
{
    NSUInteger index386=_index, yythunkpos387=yythunkpos;
    yyprintf((stderr, "%s", "Spacing"));
    ;
    NSUInteger index389, yythunkpos390;
L391:
    index389=_index; yythunkpos390=yythunkpos;
    NSUInteger index393=_index, yythunkpos394=yythunkpos;
    if (![self matchSpace]) goto L396;
    goto L395;
L396:
    _index=index393; yythunkpos=yythunkpos394;
    if (![self matchComment]) goto L392;
    goto L395;
L395:
    goto L391;
L392:
    _index=index389; yythunkpos=yythunkpos390;
    yyprintf((stderr, "  ok   %s", "Spacing"));
    return YES;
L388:
    _index=index386; yythunkpos=yythunkpos387;
    yyprintf((stderr, "  fail %s", "Spacing"));
    return NO;
}

- (BOOL) matchSuffix
{
    NSUInteger index397=_index, yythunkpos398=yythunkpos;
    yyprintf((stderr, "%s", "Suffix"));
    if (![self matchPrimary]) goto L399;
    NSUInteger index402=_index, yythunkpos403=yythunkpos;
    NSUInteger index406=_index, yythunkpos407=yythunkpos;
    if (![self matchQUESTION]) goto L409;
    [self yyDo:@selector(yy_1_Suffix:)];
    goto L408;
L409:
    _index=index406; yythunkpos=yythunkpos407;
    if (![self matchSTAR]) goto L412;
    [self yyDo:@selector(yy_2_Suffix:)];
    goto L408;
L412:
    _index=index406; yythunkpos=yythunkpos407;
    if (![self matchPLUS]) goto L404;
    [self yyDo:@selector(yy_3_Suffix:)];
    goto L408;
L408:
    goto L405;
L404:
    _index=index402; yythunkpos=yythunkpos403;
L405:
    yyprintf((stderr, "  ok   %s", "Suffix"));
    return YES;
L399:
    _index=index397; yythunkpos=yythunkpos398;
    yyprintf((stderr, "  fail %s", "Suffix"));
    return NO;
}

- (BOOL) yyparsefrom:(SEL)startRule
{
    BOOL yyok;
    if (!yythunkslen)
    {
        yythunkslen= 32;
        yythunks= malloc(sizeof(yythunk) * yythunkslen);
        yybegin= yyend= yythunkpos= 0;
    }
    if (!_string)
    {
        _string = [NSString new];
        _limit = 0;
        _index = 0;
    }
    yybegin= yyend= _index;
    yythunkpos= 0;

    NSMethodSignature *sig = [[self class] instanceMethodSignatureForSelector:startRule];
    NSInvocation *invocation = [NSInvocation invocationWithMethodSignature:sig];
    [invocation setTarget:self];
    [invocation setSelector:startRule];
    [invocation invoke];
    [invocation getReturnValue:&yyok];
    if (yyok) [self yyDone];
    [self yyCommit];

    [_string release];
    _string = nil;
    [_text release];
    _text = nil;

    return yyok;
}

- (BOOL) yyparse
{
    return [self yyparsefrom:@selector(matchGrammar)];
}


//==================================================================================================
#pragma mark -
#pragma mark NSObject Methods
//==================================================================================================

- (void) dealloc
{
    free(yythunks);

    [_string release];

    [super dealloc];
}


//==================================================================================================
#pragma mark -
#pragma mark Public Methods
//==================================================================================================

- (BOOL) parse
{
    NSAssert(_dataSource != nil, @"can't call -parse without specifying a data source");
    return [self yyparse];
}


- (BOOL) parseString:(NSString *)string
{
    _string = [string copy];
    _limit  = [_string lengthOfBytesUsingEncoding:NSUTF8StringEncoding];
    _index  = 0;
    BOOL retval = [self yyparse];
    [_string release];
    _string = nil;
    return retval;
}


@end

