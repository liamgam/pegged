//
//  Generated by preggers 0.1.0.
//

#import "PEGParser.h"

#import "Compiler.h"

@interface PEGParser ()

- (BOOL) _matchDot;
- (BOOL) _matchChar:(int)c;
- (BOOL) _matchString:(char *)s;
- (BOOL) _matchClass:(unsigned char *)bits;
- (BOOL) matchAND;
- (BOOL) matchAction;
- (BOOL) matchBEGIN;
- (BOOL) matchCLOSE;
- (BOOL) matchChar;
- (BOOL) matchClass;
- (BOOL) matchComment;
- (BOOL) matchDOT;
- (BOOL) matchDefinition;
- (BOOL) matchEND;
- (BOOL) matchEndOfFile;
- (BOOL) matchEndOfLine;
- (BOOL) matchExpression;
- (BOOL) matchGrammar;
- (BOOL) matchIdentCont;
- (BOOL) matchIdentStart;
- (BOOL) matchIdentifier;
- (BOOL) matchLEFTARROW;
- (BOOL) matchLiteral;
- (BOOL) matchNOT;
- (BOOL) matchOPEN;
- (BOOL) matchPLUS;
- (BOOL) matchPrefix;
- (BOOL) matchPrimary;
- (BOOL) matchQUESTION;
- (BOOL) matchRange;
- (BOOL) matchSLASH;
- (BOOL) matchSTAR;
- (BOOL) matchSequence;
- (BOOL) matchSpace;
- (BOOL) matchSpacing;
- (BOOL) matchSuffix;

@end


@implementation PEGParser

@synthesize dataSource = _dataSource;
@synthesize compiler = _compiler;

//==================================================================================================
#pragma mark -
#pragma mark Rules
//==================================================================================================


#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define YYRULECOUNT 32

#ifdef matchDEBUG
#define yyprintf(args)	{ fprintf args; fprintf(stderr," @ %s\n",[[_string substringFromIndex:_index] UTF8String]); }
#else
#define yyprintf(args)
#endif

- (BOOL) _refill
{
    if (!self.dataSource)
        return NO;

    NSString *nextString = [self.dataSource nextString];
    if (nextString)
    {
        nextString = [_string stringByAppendingString:nextString];
        [_string release];
        _string = [nextString retain];
    }
    _limit = [_string lengthOfBytesUsingEncoding:NSUTF8StringEncoding];
    yyprintf((stderr, "refill"));
    return YES;
}

- (BOOL) _matchDot
{
    if (_index >= _limit && ![self _refill]) return NO;
    ++_index;
    return YES;
}

- (BOOL) _matchChar:(int)c
{
    if (_index >= _limit && ![self _refill]) return NO;
    if ([_string characterAtIndex:_index] == c)
    {
        ++_index;
        yyprintf((stderr, "  ok   _matchChar(%c)", c));
        return YES;
    }
    yyprintf((stderr, "  fail _matchChar(%c)", c));
    return NO;
}

- (BOOL) _matchString:(char *)s
{
    const char *cstring = [_string UTF8String];
    int saved = _index;
    while (*s)
    {
        if (_index >= _limit && ![self _refill]) return NO;
        if (cstring[_index] != *s)
        {
            _index = saved;
            return NO;
        }
        ++s;
        ++_index;
    }
    return YES;
}

- (BOOL) _matchClass:(unsigned char *)bits
{
    if (_index >= _limit && ![self _refill]) return NO;
    int c = [_string characterAtIndex:_index];
    if (bits[c >> 3] & (1 << (c & 7)))
    {
        ++_index;
        yyprintf((stderr, "  ok   _matchClass"));
        return YES;
    }
    yyprintf((stderr, "  fail _matchClass"));
    return NO;
}

- (void) yyDo:(SEL)action from:(int)begin to:(int)end
{
    while (yythunkpos >= yythunkslen)
    {
        yythunkslen *= 2;
        yythunks= realloc(yythunks, sizeof(yythunk) * yythunkslen);
    }
    yythunks[yythunkpos].begin=  begin;
    yythunks[yythunkpos].end=    end;
    yythunks[yythunkpos].action= action;
    ++yythunkpos;
}

- (void) yyText:(int)begin to:(int)end
{
    int len = end - begin;
    if (len <= 0)
    {
        [_text release];
        _text = nil;
    }
    else
    {
        _text = [_string substringWithRange:NSMakeRange(begin, end-begin)];
        [_text retain];
    }
}

- (void) yyDone
{
    int pos;
    for (pos= 0;  pos < yythunkpos;  ++pos)
    {
        yythunk *thunk= &yythunks[pos];
        [self yyText:thunk->begin to:thunk->end];
        yyprintf((stderr, "DO [%d] %s %s\n", pos, [NSStringFromSelector(thunk->action) UTF8String], yytext));
        [self performSelector:thunk->action withObject:_text];
    }
    yythunkpos= 0;
}

- (void) yyCommit
{
    NSString *newString = [_string substringFromIndex:_index];
    [_string release];
    _string = [newString retain];
    _limit -= _index;
    _index = 0;

    yybegin -= _index;
    yyend -= _index;
    yythunkpos= 0;
}

- (void) yy_1_Definition:(NSString *)text
{
 [self.compiler startRule:text]; ;
}

- (void) yy_2_Definition:(NSString *)text
{
 [self.compiler parsedRule]; ;
}

- (void) yy_1_Expression:(NSString *)text
{
 [self.compiler parsedAlternate]; ;
}

- (void) yy_1_Sequence:(NSString *)text
{
 [self.compiler append]; ;
}

- (void) yy_1_Prefix:(NSString *)text
{
 [self.compiler parsedLookAhead]; ;
}

- (void) yy_2_Prefix:(NSString *)text
{
 [self.compiler parsedNegativeLookAhead]; ;
}

- (void) yy_1_Suffix:(NSString *)text
{
 [self.compiler parsedQuestion]; ;
}

- (void) yy_2_Suffix:(NSString *)text
{
 [self.compiler parsedStar]; ;
}

- (void) yy_3_Suffix:(NSString *)text
{
 [self.compiler parsedPlus]; ;
}

- (void) yy_1_Primary:(NSString *)text
{
 [self.compiler parsedIdentifier:text]; ;
}

- (void) yy_2_Primary:(NSString *)text
{
 [self.compiler parsedLiteral:text]; ;
}

- (void) yy_3_Primary:(NSString *)text
{
 [self.compiler parsedClass:text]; ;
}

- (void) yy_4_Primary:(NSString *)text
{
 [self.compiler parsedDot]; ;
}

- (void) yy_5_Primary:(NSString *)text
{
 [self.compiler parsedAction:text]; ;
}

- (void) yy_6_Primary:(NSString *)text
{
 [self.compiler beginCapture]; ;
}

- (void) yy_7_Primary:(NSString *)text
{
 [self.compiler endCapture]; ;
}

- (BOOL) matchAND
{
    NSUInteger index0=_index, yythunkpos1=yythunkpos;
    yyprintf((stderr, "%s", "AND"));
    if (![self _matchString:"&"]) goto L2;
    if (![self matchSpacing]) goto L2;
    yyprintf((stderr, "  ok   %s", "AND"));
    return YES;
L2:
    _index=index0; yythunkpos=yythunkpos1;
    yyprintf((stderr, "  fail %s", "AND"));
    return NO;
}

- (BOOL) matchAction
{
    NSUInteger index5=_index, yythunkpos6=yythunkpos;
    yyprintf((stderr, "%s", "Action"));
    if (![self _matchString:"{"]) goto L7;
    yybegin = _index;
    {}
    NSUInteger index10, yythunkpos11;
L12:
    index10=_index; yythunkpos11=yythunkpos;
    if (![self _matchClass:(unsigned char *)"\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\337\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"]) goto L13;
    goto L12;
L13:
    _index=index10; yythunkpos=yythunkpos11;
    yyend = _index;
    if (![self _matchString:"}"]) goto L7;
    if (![self matchSpacing]) goto L7;
    yyprintf((stderr, "  ok   %s", "Action"));
    return YES;
L7:
    _index=index5; yythunkpos=yythunkpos6;
    yyprintf((stderr, "  fail %s", "Action"));
    return NO;
}

- (BOOL) matchBEGIN
{
    NSUInteger index14=_index, yythunkpos15=yythunkpos;
    yyprintf((stderr, "%s", "BEGIN"));
    if (![self _matchString:"<"]) goto L16;
    if (![self matchSpacing]) goto L16;
    yyprintf((stderr, "  ok   %s", "BEGIN"));
    return YES;
L16:
    _index=index14; yythunkpos=yythunkpos15;
    yyprintf((stderr, "  fail %s", "BEGIN"));
    return NO;
}

- (BOOL) matchCLOSE
{
    NSUInteger index19=_index, yythunkpos20=yythunkpos;
    yyprintf((stderr, "%s", "CLOSE"));
    if (![self _matchString:")"]) goto L21;
    if (![self matchSpacing]) goto L21;
    yyprintf((stderr, "  ok   %s", "CLOSE"));
    return YES;
L21:
    _index=index19; yythunkpos=yythunkpos20;
    yyprintf((stderr, "  fail %s", "CLOSE"));
    return NO;
}

- (BOOL) matchChar
{
    NSUInteger index24=_index, yythunkpos25=yythunkpos;
    yyprintf((stderr, "%s", "Char"));
    NSUInteger index27=_index, yythunkpos28=yythunkpos;
    if (![self _matchString:"\\"]) goto L30;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\204\000\000\000\000\000\000\070\000\100\024\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L30;
    goto L29;
L30:
    _index=index27; yythunkpos=yythunkpos28;
    if (![self _matchString:"\\"]) goto L33;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L33;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\377\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L33;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\377\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L33;
    goto L29;
L33:
    _index=index27; yythunkpos=yythunkpos28;
    if (![self _matchString:"\\"]) goto L36;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\377\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L36;
    NSUInteger index39=_index, yythunkpos40=yythunkpos;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\377\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L41;
    goto L42;
L41:
    _index=index39; yythunkpos=yythunkpos40;
L42:
    goto L29;
L36:
    _index=index27; yythunkpos=yythunkpos28;
    NSUInteger index45=_index, yythunkpos46=yythunkpos;
    if ([self _matchString:"\\"]) goto L26;
    _index=index45; yythunkpos=yythunkpos46;
    if (![self _matchDot]) goto L26;
    goto L29;
L29:
    yyprintf((stderr, "  ok   %s", "Char"));
    return YES;
L26:
    _index=index24; yythunkpos=yythunkpos25;
    yyprintf((stderr, "  fail %s", "Char"));
    return NO;
}

- (BOOL) matchClass
{
    NSUInteger index47=_index, yythunkpos48=yythunkpos;
    yyprintf((stderr, "%s", "Class"));
    if (![self _matchString:"["]) goto L49;
    yybegin = _index;
    {}
    NSUInteger index52, yythunkpos53;
L54:
    index52=_index; yythunkpos53=yythunkpos;
    NSUInteger index58=_index, yythunkpos59=yythunkpos;
    if ([self _matchString:"]"]) goto L55;
    _index=index58; yythunkpos=yythunkpos59;
    if (![self matchRange]) goto L55;
    goto L54;
L55:
    _index=index52; yythunkpos=yythunkpos53;
    yyend = _index;
    if (![self _matchString:"]"]) goto L49;
    if (![self matchSpacing]) goto L49;
    yyprintf((stderr, "  ok   %s", "Class"));
    return YES;
L49:
    _index=index47; yythunkpos=yythunkpos48;
    yyprintf((stderr, "  fail %s", "Class"));
    return NO;
}

- (BOOL) matchComment
{
    NSUInteger index60=_index, yythunkpos61=yythunkpos;
    yyprintf((stderr, "%s", "Comment"));
    if (![self _matchString:"#"]) goto L62;
    {}
    NSUInteger index65, yythunkpos66;
L67:
    index65=_index; yythunkpos66=yythunkpos;
    NSUInteger index71=_index, yythunkpos72=yythunkpos;
    if ([self matchEndOfLine]) goto L68;
    _index=index71; yythunkpos=yythunkpos72;
    if (![self _matchDot]) goto L68;
    goto L67;
L68:
    _index=index65; yythunkpos=yythunkpos66;
    if (![self matchEndOfLine]) goto L62;
    yyprintf((stderr, "  ok   %s", "Comment"));
    return YES;
L62:
    _index=index60; yythunkpos=yythunkpos61;
    yyprintf((stderr, "  fail %s", "Comment"));
    return NO;
}

- (BOOL) matchDOT
{
    NSUInteger index73=_index, yythunkpos74=yythunkpos;
    yyprintf((stderr, "%s", "DOT"));
    if (![self _matchString:"."]) goto L75;
    if (![self matchSpacing]) goto L75;
    yyprintf((stderr, "  ok   %s", "DOT"));
    return YES;
L75:
    _index=index73; yythunkpos=yythunkpos74;
    yyprintf((stderr, "  fail %s", "DOT"));
    return NO;
}

- (BOOL) matchDefinition
{
    NSUInteger index78=_index, yythunkpos79=yythunkpos;
    yyprintf((stderr, "%s", "Definition"));
    if (![self matchIdentifier]) goto L80;
    [self yyDo:@selector(yy_1_Definition:) from:yybegin to:yyend];
    if (![self matchLEFTARROW]) goto L80;
    if (![self matchExpression]) goto L80;
    [self yyDo:@selector(yy_2_Definition:) from:yybegin to:yyend];
    yyprintf((stderr, "  ok   %s", "Definition"));
    return YES;
L80:
    _index=index78; yythunkpos=yythunkpos79;
    yyprintf((stderr, "  fail %s", "Definition"));
    return NO;
}

- (BOOL) matchEND
{
    NSUInteger index83=_index, yythunkpos84=yythunkpos;
    yyprintf((stderr, "%s", "END"));
    if (![self _matchString:">"]) goto L85;
    if (![self matchSpacing]) goto L85;
    yyprintf((stderr, "  ok   %s", "END"));
    return YES;
L85:
    _index=index83; yythunkpos=yythunkpos84;
    yyprintf((stderr, "  fail %s", "END"));
    return NO;
}

- (BOOL) matchEndOfFile
{
    NSUInteger index88=_index, yythunkpos89=yythunkpos;
    yyprintf((stderr, "%s", "EndOfFile"));
    NSUInteger index91=_index, yythunkpos92=yythunkpos;
    if ([self _matchDot]) goto L90;
    _index=index91; yythunkpos=yythunkpos92;
    yyprintf((stderr, "  ok   %s", "EndOfFile"));
    return YES;
L90:
    _index=index88; yythunkpos=yythunkpos89;
    yyprintf((stderr, "  fail %s", "EndOfFile"));
    return NO;
}

- (BOOL) matchEndOfLine
{
    NSUInteger index93=_index, yythunkpos94=yythunkpos;
    yyprintf((stderr, "%s", "EndOfLine"));
    NSUInteger index96=_index, yythunkpos97=yythunkpos;
    if (![self _matchString:"\r\n"]) goto L99;
    goto L98;
L99:
    _index=index96; yythunkpos=yythunkpos97;
    if (![self _matchString:"\n"]) goto L100;
    goto L98;
L100:
    _index=index96; yythunkpos=yythunkpos97;
    if (![self _matchString:"\r"]) goto L95;
    goto L98;
L98:
    yyprintf((stderr, "  ok   %s", "EndOfLine"));
    return YES;
L95:
    _index=index93; yythunkpos=yythunkpos94;
    yyprintf((stderr, "  fail %s", "EndOfLine"));
    return NO;
}

- (BOOL) matchExpression
{
    NSUInteger index101=_index, yythunkpos102=yythunkpos;
    yyprintf((stderr, "%s", "Expression"));
    if (![self matchSequence]) goto L103;
    {}
    NSUInteger index106, yythunkpos107;
L108:
    index106=_index; yythunkpos107=yythunkpos;
    if (![self matchSLASH]) goto L109;
    if (![self matchSequence]) goto L109;
    [self yyDo:@selector(yy_1_Expression:) from:yybegin to:yyend];
    goto L108;
L109:
    _index=index106; yythunkpos=yythunkpos107;
    yyprintf((stderr, "  ok   %s", "Expression"));
    return YES;
L103:
    _index=index101; yythunkpos=yythunkpos102;
    yyprintf((stderr, "  fail %s", "Expression"));
    return NO;
}

- (BOOL) matchGrammar
{
    NSUInteger index112=_index, yythunkpos113=yythunkpos;
    yyprintf((stderr, "%s", "Grammar"));
    if (![self matchSpacing]) goto L114;
    if (![self matchDefinition]) goto L114;
    NSUInteger index117, yythunkpos118;
L119:
    index117=_index; yythunkpos118=yythunkpos;
    if (![self matchDefinition]) goto L120;
    goto L119;
L120:
    _index=index117; yythunkpos=yythunkpos118;
    if (![self matchEndOfFile]) goto L114;
    yyprintf((stderr, "  ok   %s", "Grammar"));
    return YES;
L114:
    _index=index112; yythunkpos=yythunkpos113;
    yyprintf((stderr, "  fail %s", "Grammar"));
    return NO;
}

- (BOOL) matchIdentCont
{
    NSUInteger index121=_index, yythunkpos122=yythunkpos;
    yyprintf((stderr, "%s", "IdentCont"));
    NSUInteger index124=_index, yythunkpos125=yythunkpos;
    if (![self matchIdentStart]) goto L127;
    goto L126;
L127:
    _index=index124; yythunkpos=yythunkpos125;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\377\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L123;
    goto L126;
L126:
    yyprintf((stderr, "  ok   %s", "IdentCont"));
    return YES;
L123:
    _index=index121; yythunkpos=yythunkpos122;
    yyprintf((stderr, "  fail %s", "IdentCont"));
    return NO;
}

- (BOOL) matchIdentStart
{
    NSUInteger index128=_index, yythunkpos129=yythunkpos;
    yyprintf((stderr, "%s", "IdentStart"));
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\000\000\000\000\376\377\377\207\376\377\377\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L130;
    yyprintf((stderr, "  ok   %s", "IdentStart"));
    return YES;
L130:
    _index=index128; yythunkpos=yythunkpos129;
    yyprintf((stderr, "  fail %s", "IdentStart"));
    return NO;
}

- (BOOL) matchIdentifier
{
    NSUInteger index131=_index, yythunkpos132=yythunkpos;
    yyprintf((stderr, "%s", "Identifier"));
    yybegin = _index;
    if (![self matchIdentStart]) goto L133;
    {}
    NSUInteger index136, yythunkpos137;
L138:
    index136=_index; yythunkpos137=yythunkpos;
    if (![self matchIdentCont]) goto L139;
    goto L138;
L139:
    _index=index136; yythunkpos=yythunkpos137;
    yyend = _index;
    if (![self matchSpacing]) goto L133;
    yyprintf((stderr, "  ok   %s", "Identifier"));
    return YES;
L133:
    _index=index131; yythunkpos=yythunkpos132;
    yyprintf((stderr, "  fail %s", "Identifier"));
    return NO;
}

- (BOOL) matchLEFTARROW
{
    NSUInteger index140=_index, yythunkpos141=yythunkpos;
    yyprintf((stderr, "%s", "LEFTARROW"));
    if (![self _matchString:"<-"]) goto L142;
    if (![self matchSpacing]) goto L142;
    yyprintf((stderr, "  ok   %s", "LEFTARROW"));
    return YES;
L142:
    _index=index140; yythunkpos=yythunkpos141;
    yyprintf((stderr, "  fail %s", "LEFTARROW"));
    return NO;
}

- (BOOL) matchLiteral
{
    NSUInteger index145=_index, yythunkpos146=yythunkpos;
    yyprintf((stderr, "%s", "Literal"));
    NSUInteger index148=_index, yythunkpos149=yythunkpos;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L151;
    yybegin = _index;
    {}
    NSUInteger index154, yythunkpos155;
L156:
    index154=_index; yythunkpos155=yythunkpos;
    NSUInteger index160=_index, yythunkpos161=yythunkpos;
    if ([self _matchClass:(unsigned char *)"\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L157;
    _index=index160; yythunkpos=yythunkpos161;
    if (![self matchChar]) goto L157;
    goto L156;
L157:
    _index=index154; yythunkpos=yythunkpos155;
    yyend = _index;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L151;
    if (![self matchSpacing]) goto L151;
    goto L150;
L151:
    _index=index148; yythunkpos=yythunkpos149;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L147;
    yybegin = _index;
    {}
    NSUInteger index164, yythunkpos165;
L166:
    index164=_index; yythunkpos165=yythunkpos;
    NSUInteger index170=_index, yythunkpos171=yythunkpos;
    if ([self _matchClass:(unsigned char *)"\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L167;
    _index=index170; yythunkpos=yythunkpos171;
    if (![self matchChar]) goto L167;
    goto L166;
L167:
    _index=index164; yythunkpos=yythunkpos165;
    yyend = _index;
    if (![self _matchClass:(unsigned char *)"\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"]) goto L147;
    if (![self matchSpacing]) goto L147;
    goto L150;
L150:
    yyprintf((stderr, "  ok   %s", "Literal"));
    return YES;
L147:
    _index=index145; yythunkpos=yythunkpos146;
    yyprintf((stderr, "  fail %s", "Literal"));
    return NO;
}

- (BOOL) matchNOT
{
    NSUInteger index172=_index, yythunkpos173=yythunkpos;
    yyprintf((stderr, "%s", "NOT"));
    if (![self _matchString:"!"]) goto L174;
    if (![self matchSpacing]) goto L174;
    yyprintf((stderr, "  ok   %s", "NOT"));
    return YES;
L174:
    _index=index172; yythunkpos=yythunkpos173;
    yyprintf((stderr, "  fail %s", "NOT"));
    return NO;
}

- (BOOL) matchOPEN
{
    NSUInteger index177=_index, yythunkpos178=yythunkpos;
    yyprintf((stderr, "%s", "OPEN"));
    if (![self _matchString:"("]) goto L179;
    if (![self matchSpacing]) goto L179;
    yyprintf((stderr, "  ok   %s", "OPEN"));
    return YES;
L179:
    _index=index177; yythunkpos=yythunkpos178;
    yyprintf((stderr, "  fail %s", "OPEN"));
    return NO;
}

- (BOOL) matchPLUS
{
    NSUInteger index182=_index, yythunkpos183=yythunkpos;
    yyprintf((stderr, "%s", "PLUS"));
    if (![self _matchString:"+"]) goto L184;
    if (![self matchSpacing]) goto L184;
    yyprintf((stderr, "  ok   %s", "PLUS"));
    return YES;
L184:
    _index=index182; yythunkpos=yythunkpos183;
    yyprintf((stderr, "  fail %s", "PLUS"));
    return NO;
}

- (BOOL) matchPrefix
{
    NSUInteger index187=_index, yythunkpos188=yythunkpos;
    yyprintf((stderr, "%s", "Prefix"));
    NSUInteger index190=_index, yythunkpos191=yythunkpos;
    if (![self matchAND]) goto L193;
    if (![self matchSuffix]) goto L193;
    [self yyDo:@selector(yy_1_Prefix:) from:yybegin to:yyend];
    goto L192;
L193:
    _index=index190; yythunkpos=yythunkpos191;
    if (![self matchNOT]) goto L196;
    if (![self matchSuffix]) goto L196;
    [self yyDo:@selector(yy_2_Prefix:) from:yybegin to:yyend];
    goto L192;
L196:
    _index=index190; yythunkpos=yythunkpos191;
    if (![self matchSuffix]) goto L189;
    goto L192;
L192:
    yyprintf((stderr, "  ok   %s", "Prefix"));
    return YES;
L189:
    _index=index187; yythunkpos=yythunkpos188;
    yyprintf((stderr, "  fail %s", "Prefix"));
    return NO;
}

- (BOOL) matchPrimary
{
    NSUInteger index199=_index, yythunkpos200=yythunkpos;
    yyprintf((stderr, "%s", "Primary"));
    NSUInteger index202=_index, yythunkpos203=yythunkpos;
    if (![self matchIdentifier]) goto L205;
    NSUInteger index208=_index, yythunkpos209=yythunkpos;
    if ([self matchLEFTARROW]) goto L205;
    _index=index208; yythunkpos=yythunkpos209;
    [self yyDo:@selector(yy_1_Primary:) from:yybegin to:yyend];
    goto L204;
L205:
    _index=index202; yythunkpos=yythunkpos203;
    if (![self matchOPEN]) goto L210;
    if (![self matchExpression]) goto L210;
    if (![self matchCLOSE]) goto L210;
    goto L204;
L210:
    _index=index202; yythunkpos=yythunkpos203;
    if (![self matchLiteral]) goto L213;
    [self yyDo:@selector(yy_2_Primary:) from:yybegin to:yyend];
    goto L204;
L213:
    _index=index202; yythunkpos=yythunkpos203;
    if (![self matchClass]) goto L216;
    [self yyDo:@selector(yy_3_Primary:) from:yybegin to:yyend];
    goto L204;
L216:
    _index=index202; yythunkpos=yythunkpos203;
    if (![self matchDOT]) goto L219;
    [self yyDo:@selector(yy_4_Primary:) from:yybegin to:yyend];
    goto L204;
L219:
    _index=index202; yythunkpos=yythunkpos203;
    if (![self matchAction]) goto L222;
    [self yyDo:@selector(yy_5_Primary:) from:yybegin to:yyend];
    goto L204;
L222:
    _index=index202; yythunkpos=yythunkpos203;
    if (![self matchBEGIN]) goto L225;
    [self yyDo:@selector(yy_6_Primary:) from:yybegin to:yyend];
    goto L204;
L225:
    _index=index202; yythunkpos=yythunkpos203;
    if (![self matchEND]) goto L201;
    [self yyDo:@selector(yy_7_Primary:) from:yybegin to:yyend];
    goto L204;
L204:
    yyprintf((stderr, "  ok   %s", "Primary"));
    return YES;
L201:
    _index=index199; yythunkpos=yythunkpos200;
    yyprintf((stderr, "  fail %s", "Primary"));
    return NO;
}

- (BOOL) matchQUESTION
{
    NSUInteger index230=_index, yythunkpos231=yythunkpos;
    yyprintf((stderr, "%s", "QUESTION"));
    if (![self _matchString:"?"]) goto L232;
    if (![self matchSpacing]) goto L232;
    yyprintf((stderr, "  ok   %s", "QUESTION"));
    return YES;
L232:
    _index=index230; yythunkpos=yythunkpos231;
    yyprintf((stderr, "  fail %s", "QUESTION"));
    return NO;
}

- (BOOL) matchRange
{
    NSUInteger index235=_index, yythunkpos236=yythunkpos;
    yyprintf((stderr, "%s", "Range"));
    NSUInteger index238=_index, yythunkpos239=yythunkpos;
    if (![self matchChar]) goto L241;
    if (![self _matchString:"-"]) goto L241;
    if (![self matchChar]) goto L241;
    goto L240;
L241:
    _index=index238; yythunkpos=yythunkpos239;
    if (![self matchChar]) goto L237;
    goto L240;
L240:
    yyprintf((stderr, "  ok   %s", "Range"));
    return YES;
L237:
    _index=index235; yythunkpos=yythunkpos236;
    yyprintf((stderr, "  fail %s", "Range"));
    return NO;
}

- (BOOL) matchSLASH
{
    NSUInteger index244=_index, yythunkpos245=yythunkpos;
    yyprintf((stderr, "%s", "SLASH"));
    if (![self _matchString:"/"]) goto L246;
    if (![self matchSpacing]) goto L246;
    yyprintf((stderr, "  ok   %s", "SLASH"));
    return YES;
L246:
    _index=index244; yythunkpos=yythunkpos245;
    yyprintf((stderr, "  fail %s", "SLASH"));
    return NO;
}

- (BOOL) matchSTAR
{
    NSUInteger index249=_index, yythunkpos250=yythunkpos;
    yyprintf((stderr, "%s", "STAR"));
    if (![self _matchString:"*"]) goto L251;
    if (![self matchSpacing]) goto L251;
    yyprintf((stderr, "  ok   %s", "STAR"));
    return YES;
L251:
    _index=index249; yythunkpos=yythunkpos250;
    yyprintf((stderr, "  fail %s", "STAR"));
    return NO;
}

- (BOOL) matchSequence
{
    NSUInteger index254=_index, yythunkpos255=yythunkpos;
    yyprintf((stderr, "%s", "Sequence"));
    NSUInteger index259=_index, yythunkpos260=yythunkpos;
    if (![self matchPrefix]) goto L261;
    goto L262;
L261:
    _index=index259; yythunkpos=yythunkpos260;
L262:
    {}
    NSUInteger index263, yythunkpos264;
L265:
    index263=_index; yythunkpos264=yythunkpos;
    if (![self matchPrefix]) goto L266;
    [self yyDo:@selector(yy_1_Sequence:) from:yybegin to:yyend];
    goto L265;
L266:
    _index=index263; yythunkpos=yythunkpos264;
    yyprintf((stderr, "  ok   %s", "Sequence"));
    return YES;
L256:
    _index=index254; yythunkpos=yythunkpos255;
    yyprintf((stderr, "  fail %s", "Sequence"));
    return NO;
}

- (BOOL) matchSpace
{
    NSUInteger index269=_index, yythunkpos270=yythunkpos;
    yyprintf((stderr, "%s", "Space"));
    NSUInteger index272=_index, yythunkpos273=yythunkpos;
    if (![self _matchString:" "]) goto L275;
    goto L274;
L275:
    _index=index272; yythunkpos=yythunkpos273;
    if (![self _matchString:"\t"]) goto L276;
    goto L274;
L276:
    _index=index272; yythunkpos=yythunkpos273;
    if (![self matchEndOfLine]) goto L271;
    goto L274;
L274:
    yyprintf((stderr, "  ok   %s", "Space"));
    return YES;
L271:
    _index=index269; yythunkpos=yythunkpos270;
    yyprintf((stderr, "  fail %s", "Space"));
    return NO;
}

- (BOOL) matchSpacing
{
    NSUInteger index277=_index, yythunkpos278=yythunkpos;
    yyprintf((stderr, "%s", "Spacing"));
    {}
    NSUInteger index280, yythunkpos281;
L282:
    index280=_index; yythunkpos281=yythunkpos;
    NSUInteger index284=_index, yythunkpos285=yythunkpos;
    if (![self matchSpace]) goto L287;
    goto L286;
L287:
    _index=index284; yythunkpos=yythunkpos285;
    if (![self matchComment]) goto L283;
    goto L286;
L286:
    goto L282;
L283:
    _index=index280; yythunkpos=yythunkpos281;
    yyprintf((stderr, "  ok   %s", "Spacing"));
    return YES;
L279:
    _index=index277; yythunkpos=yythunkpos278;
    yyprintf((stderr, "  fail %s", "Spacing"));
    return NO;
}

- (BOOL) matchSuffix
{
    NSUInteger index288=_index, yythunkpos289=yythunkpos;
    yyprintf((stderr, "%s", "Suffix"));
    if (![self matchPrimary]) goto L290;
    NSUInteger index293=_index, yythunkpos294=yythunkpos;
    NSUInteger index297=_index, yythunkpos298=yythunkpos;
    if (![self matchQUESTION]) goto L300;
    [self yyDo:@selector(yy_1_Suffix:) from:yybegin to:yyend];
    goto L299;
L300:
    _index=index297; yythunkpos=yythunkpos298;
    if (![self matchSTAR]) goto L303;
    [self yyDo:@selector(yy_2_Suffix:) from:yybegin to:yyend];
    goto L299;
L303:
    _index=index297; yythunkpos=yythunkpos298;
    if (![self matchPLUS]) goto L295;
    [self yyDo:@selector(yy_3_Suffix:) from:yybegin to:yyend];
    goto L299;
L299:
    goto L296;
L295:
    _index=index293; yythunkpos=yythunkpos294;
L296:
    yyprintf((stderr, "  ok   %s", "Suffix"));
    return YES;
L290:
    _index=index288; yythunkpos=yythunkpos289;
    yyprintf((stderr, "  fail %s", "Suffix"));
    return NO;
}

- (BOOL) yyparsefrom:(SEL)startRule
{
    BOOL yyok;
    if (!yythunkslen)
    {
        yythunkslen= 32;
        yythunks= malloc(sizeof(yythunk) * yythunkslen);
        yybegin= yyend= yythunkpos= 0;
    }
    if (!_string)
    {
        _string = [NSString new];
        _limit = 0;
        _index = 0;
    }
    yybegin= yyend= _index;
    yythunkpos= 0;

    NSMethodSignature *sig = [[self class] instanceMethodSignatureForSelector:startRule];
    NSInvocation *invocation = [NSInvocation invocationWithMethodSignature:sig];
    [invocation setTarget:self];
    [invocation setSelector:startRule];
    [invocation invoke];
    [invocation getReturnValue:&yyok];
    if (yyok) [self yyDone];
    [self yyCommit];

    [_string release];
    _string = nil;
    [_text release];
    _text = nil;

    return yyok;
}

- (BOOL) yyparse
{
    return [self yyparsefrom:@selector(matchGrammar)];
}


//==================================================================================================
#pragma mark -
#pragma mark NSObject Methods
//==================================================================================================

- (void) dealloc
{
    free(yythunks);

    [_string release];

    [super dealloc];
}


//==================================================================================================
#pragma mark -
#pragma mark Public Methods
//==================================================================================================

- (BOOL) parse
{
    NSAssert(_dataSource != nil, @"can't call -parse without specifying a data source");
    return [self yyparse];
}


- (BOOL) parseString:(NSString *)string
{
    _string = [string copy];
    _limit  = [_string lengthOfBytesUsingEncoding:NSUTF8StringEncoding];
    _index  = 0;
    BOOL retval = [self yyparse];
    [_string release];
    _string = nil;
    return retval;
}


@end

